{"version":3,"file":"default.js","mappings":"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","sources":["webpack://OktaAuth/webpack/universalModuleDefinition","webpack://OktaAuth/./lib/authn/util/stateToken.ts","webpack://OktaAuth/./lib/authn/api.ts","webpack://OktaAuth/./lib/authn/util/link2fn.ts","webpack://OktaAuth/./lib/authn/util/poll.ts","webpack://OktaAuth/./lib/authn/util/flattenEmbedded.ts","webpack://OktaAuth/./lib/authn/util/links2fns.ts","webpack://OktaAuth/./lib/authn/AuthnTransactionImpl.ts","webpack://OktaAuth/./lib/authn/factory.ts","webpack://OktaAuth/./lib/authn/mixin.ts","webpack://OktaAuth/./lib/base/factory.ts","webpack://OktaAuth/./lib/base/options.ts","webpack://OktaAuth/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://OktaAuth/./lib/browser/browserStorage.ts","webpack://OktaAuth/./lib/browser/fingerprint.ts","webpack://OktaAuth/./lib/constants.ts","webpack://OktaAuth/./lib/core/AuthStateManager.ts","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/native.js","webpack://OktaAuth/./node_modules/oblivious-set/dist/esm/src/index.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/options.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","webpack://OktaAuth/./node_modules/unload/dist/es/index.js","webpack://OktaAuth/./node_modules/unload/dist/es/node.js","webpack://OktaAuth/./node_modules/unload/dist/es/browser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election.js","webpack://OktaAuth/./lib/services/LeaderElectionService.ts","webpack://OktaAuth/./lib/services/AutoRenewService.ts","webpack://OktaAuth/./lib/services/SyncStorageService.ts","webpack://OktaAuth/./lib/services/RenewOnTabActivationService.ts","webpack://OktaAuth/./lib/core/ServiceManager/browser.ts","webpack://OktaAuth/./lib/core/factory.ts","webpack://OktaAuth/./lib/core/mixin.ts","webpack://OktaAuth/./lib/core/options.ts","webpack://OktaAuth/./lib/core/storage.ts","webpack://OktaAuth/./lib/crypto/base64.ts","webpack://OktaAuth/./lib/crypto/browser.ts","webpack://OktaAuth/./lib/crypto/oidcHash.ts","webpack://OktaAuth/./lib/crypto/verifyToken.ts","webpack://OktaAuth/./lib/errors/AuthApiError.ts","webpack://OktaAuth/./lib/errors/AuthPollStopError.ts","webpack://OktaAuth/./lib/errors/AuthSdkError.ts","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://OktaAuth/./lib/errors/CustomError.ts","webpack://OktaAuth/./lib/errors/OAuthError.ts","webpack://OktaAuth/./lib/errors/WWWAuthError.ts","webpack://OktaAuth/./lib/errors/index.ts","webpack://OktaAuth/./lib/features.ts","webpack://OktaAuth/./lib/http/OktaUserAgent.ts","webpack://OktaAuth/./lib/http/headers.ts","webpack://OktaAuth/./lib/http/mixin.ts","webpack://OktaAuth/./lib/fetch/fetchRequest.ts","webpack://OktaAuth/./lib/http/options.ts","webpack://OktaAuth/./lib/http/request.ts","webpack://OktaAuth/./lib/idx/IdxTransactionManager.ts","webpack://OktaAuth/./lib/idx/authenticate.ts","webpack://OktaAuth/./lib/idx/authenticator/Authenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaPassword.ts","webpack://OktaAuth/./lib/idx/authenticator/util.ts","webpack://OktaAuth/./lib/idx/cancel.ts","webpack://OktaAuth/./lib/idx/emailVerify.ts","webpack://OktaAuth/./lib/idx/factory/OktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/factory/api.ts","webpack://OktaAuth/./lib/idx/flow/AuthenticationFlow.ts","webpack://OktaAuth/./lib/idx/flow/PasswordRecoveryFlow.ts","webpack://OktaAuth/./lib/idx/flow/RegistrationFlow.ts","webpack://OktaAuth/./lib/idx/flow/AccountUnlockFlow.ts","webpack://OktaAuth/./lib/idx/flow/FlowSpecification.ts","webpack://OktaAuth/./lib/idx/handleInteractionCodeRedirect.ts","webpack://OktaAuth/./lib/idx/idxState/v1/actionParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/generateIdxAction.ts","webpack://OktaAuth/./lib/idx/idxState/v1/remediationParser.ts","webpack://OktaAuth/./lib/util/jsonpath.ts","webpack://OktaAuth/./lib/idx/idxState/v1/idxResponseParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/parsers.ts","webpack://OktaAuth/./lib/idx/idxState/v1/makeIdxState.ts","webpack://OktaAuth/./lib/idx/idxState/index.ts","webpack://OktaAuth/./lib/idx/mixinMinimal.ts","webpack://OktaAuth/./lib/idx/factory/minimalApi.ts","webpack://OktaAuth/./lib/oidc/mixin/minimal.ts","webpack://OktaAuth/./lib/oidc/factory/baseApi.ts","webpack://OktaAuth/./lib/idx/factory/MinimalOktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/interact.ts","webpack://OktaAuth/./lib/idx/introspect.ts","webpack://OktaAuth/./lib/idx/mixin.ts","webpack://OktaAuth/./lib/idx/options.ts","webpack://OktaAuth/./lib/idx/poll.ts","webpack://OktaAuth/./lib/idx/proceed.ts","webpack://OktaAuth/./lib/idx/recoverPassword.ts","webpack://OktaAuth/./lib/idx/register.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorEnrollmentData.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorVerificationData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/AuthenticatorData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/Remediator.ts","webpack://OktaAuth/./lib/idx/remediators/Base/SelectAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/VerificationCodeAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaVerifyTotp.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionVerification.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnVerification.ts","webpack://OktaAuth/./lib/idx/remediators/Base/VerifyAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/getAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengeAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengePoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollPoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollmentChannelData.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/util.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/GenericRemediator.ts","webpack://OktaAuth/./lib/idx/remediators/Identify.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticatorWarning.ts","webpack://OktaAuth/./lib/idx/remediators/RedirectIdp.ts","webpack://OktaAuth/./lib/idx/remediators/ResetAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorEnroll.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollmentChannel.ts","webpack://OktaAuth/./lib/idx/remediators/Skip.ts","webpack://OktaAuth/./lib/idx/remediators/util.ts","webpack://OktaAuth/./lib/idx/remediate.ts","webpack://OktaAuth/./lib/idx/run.ts","webpack://OktaAuth/./lib/idx/startTransaction.ts","webpack://OktaAuth/./lib/idx/storage.ts","webpack://OktaAuth/./lib/idx/transactionMeta.ts","webpack://OktaAuth/./lib/idx/types/api.ts","webpack://OktaAuth/./lib/idx/types/idx-js.ts","webpack://OktaAuth/./lib/idx/unlockAccount.ts","webpack://OktaAuth/./lib/idx/util.ts","webpack://OktaAuth/./lib/idx/webauthn.ts","webpack://OktaAuth/./lib/myaccount/transactions/Base.ts","webpack://OktaAuth/./lib/myaccount/request.ts","webpack://OktaAuth/./lib/myaccount/transactions/ProfileTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/ProfileSchemaTransaction.ts","webpack://OktaAuth/./lib/myaccount/profileApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailStatusTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailChallengeTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailTransaction.ts","webpack://OktaAuth/./lib/myaccount/emailApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/PhoneTransaction.ts","webpack://OktaAuth/./lib/myaccount/phoneApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/PasswordTransaction.ts","webpack://OktaAuth/./lib/myaccount/passwordApi.ts","webpack://OktaAuth/./lib/myaccount/factory.ts","webpack://OktaAuth/./lib/myaccount/mixin.ts","webpack://OktaAuth/./lib/myaccount/types.ts","webpack://OktaAuth/./lib/clock.ts","webpack://OktaAuth/./lib/oidc/TokenManager.ts","webpack://OktaAuth/./lib/oidc/util/sharedStorage.ts","webpack://OktaAuth/./lib/oidc/TransactionManager.ts","webpack://OktaAuth/./lib/oidc/decodeToken.ts","webpack://OktaAuth/./lib/oidc/dpop.ts","webpack://OktaAuth/./lib/oidc/endpoints/authorize.ts","webpack://OktaAuth/./lib/oidc/endpoints/token.ts","webpack://OktaAuth/./lib/oidc/endpoints/well-known.ts","webpack://OktaAuth/./lib/oidc/exchangeCodeForTokens.ts","webpack://OktaAuth/./lib/oidc/enrollAuthenticator.ts","webpack://OktaAuth/./lib/oidc/factory/api.ts","webpack://OktaAuth/./lib/oidc/factory/OktaAuthOAuth.ts","webpack://OktaAuth/./lib/oidc/getToken.ts","webpack://OktaAuth/./lib/oidc/getUserInfo.ts","webpack://OktaAuth/./lib/oidc/getWithPopup.ts","webpack://OktaAuth/./lib/oidc/getWithRedirect.ts","webpack://OktaAuth/./lib/oidc/getWithoutPrompt.ts","webpack://OktaAuth/./lib/oidc/handleOAuthResponse.ts","webpack://OktaAuth/./lib/oidc/introspect.ts","webpack://OktaAuth/./lib/oidc/mixin/index.ts","webpack://OktaAuth/./lib/oidc/mixin/browser.ts","webpack://OktaAuth/./lib/oidc/options/browser.ts","webpack://OktaAuth/./lib/oidc/options/OAuthOptionsConstructor.ts","webpack://OktaAuth/./lib/oidc/parseFromUrl.ts","webpack://OktaAuth/./lib/oidc/renewToken.ts","webpack://OktaAuth/./lib/oidc/renewTokens.ts","webpack://OktaAuth/./lib/oidc/renewTokensWithRefresh.ts","webpack://OktaAuth/./lib/oidc/revokeToken.ts","webpack://OktaAuth/./lib/oidc/storage.ts","webpack://OktaAuth/./lib/oidc/types/Token.ts","webpack://OktaAuth/./lib/oidc/types/TokenManager.ts","webpack://OktaAuth/./lib/oidc/types/Transaction.ts","webpack://OktaAuth/./lib/oidc/util/browser.ts","webpack://OktaAuth/./lib/oidc/util/defaultEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/defaultTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/enrollAuthenticatorMeta.ts","webpack://OktaAuth/./lib/oidc/util/errors.ts","webpack://OktaAuth/./lib/oidc/util/loginRedirect.ts","webpack://OktaAuth/./lib/oidc/util/oauth.ts","webpack://OktaAuth/./lib/oidc/util/oauthMeta.ts","webpack://OktaAuth/./lib/oidc/util/pkce.ts","webpack://OktaAuth/./lib/oidc/util/prepareEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/prepareTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/refreshToken.ts","webpack://OktaAuth/./lib/oidc/util/urlParams.ts","webpack://OktaAuth/./lib/oidc/util/validateClaims.ts","webpack://OktaAuth/./lib/oidc/util/validateToken.ts","webpack://OktaAuth/./lib/oidc/verifyToken.ts","webpack://OktaAuth/./lib/session/api.ts","webpack://OktaAuth/./lib/session/factory.ts","webpack://OktaAuth/./lib/session/mixin.ts","webpack://OktaAuth/./lib/storage/BaseStorageManager.ts","webpack://OktaAuth/./lib/storage/SavedObject.ts","webpack://OktaAuth/./lib/storage/mixin.ts","webpack://OktaAuth/./lib/storage/options/browser.ts","webpack://OktaAuth/./lib/storage/options/StorageOptionsConstructor.ts","webpack://OktaAuth/./lib/util/PromiseQueue.ts","webpack://OktaAuth/./lib/util/console.ts","webpack://OktaAuth/./lib/util/misc.ts","webpack://OktaAuth/./lib/util/object.ts","webpack://OktaAuth/./lib/util/types.ts","webpack://OktaAuth/./lib/util/url.ts","webpack://OktaAuth/./node_modules/p-cancelable/index.js","webpack://OktaAuth/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://OktaAuth/./node_modules/tiny-emitter/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/construct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/regenerator/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://OktaAuth/webpack/bootstrap","webpack://OktaAuth/webpack/runtime/compat get default export","webpack://OktaAuth/webpack/runtime/define property getters","webpack://OktaAuth/webpack/runtime/global","webpack://OktaAuth/webpack/runtime/hasOwnProperty shorthand","webpack://OktaAuth/webpack/runtime/make namespace object","webpack://OktaAuth/./lib/exports/default.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OktaAuth\"] = factory();\n\telse\n\t\troot[\"OktaAuth\"] = factory();\n})(self, function() {\nreturn ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { AuthnTransactionState } from '../types';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as AuthnTransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { OktaAuthHttpInterface } from '../http/types';\nimport { OktaAuthStorageOptions } from '../storage/types';\nimport { addStateToken } from './util/stateToken';\nimport { AuthnTransactionAPI } from './types';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function transactionStatus(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return transactionStatus(sdk, args)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function introspectAuthn (sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function transactionStep(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n  // We have a cookie state token\n  return !!getSavedStateToken(sdk);\n}\n\nexport function postToTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, url: string, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function getSavedStateToken(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const storage = sdk.options.storageUtil!.storage;\n    return storage.get(STATE_TOKEN_KEY_NAME);\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { find, omit, toQueryString } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { get } from '../../http';\nimport { AuthnTransactionAPI, AuthnTransactionState } from '../types';\nimport { postToTransaction } from '../api';\nimport { addStateToken } from './stateToken';\n\n\n// query parameters to post url\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line max-params\nexport function link2fn(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, tx, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: AuthnTransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, tx, href, data);\n        };\n    }\n  }\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../../util';\nimport { DEFAULT_POLLING_DELAY } from '../../constants';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport AuthPollStopError from '../../errors/AuthPollStopError';\nimport { AuthnTransactionState } from '../types';\nimport { getStateToken } from './stateToken';\n\ninterface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (AuthnTransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: AuthnTransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true,\n        pollingIntent: true,\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/* eslint-disable complexity */\nimport { OktaAuthHttpInterface } from '../../http/types';\nimport { clone, isObject, omit } from '../../util';\nimport { AuthnTransactionAPI } from '../types';\nimport { links2fns } from './links2fns';\n\nexport function flattenEmbedded(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, tx, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, tx, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, tx, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { AuthnTransactionFunctions, AuthnTransactionAPI } from '../types';\nimport { link2fn } from './link2fn';\nimport { getPollFn } from './poll';\n\nexport function links2fns(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  var fns = {} as AuthnTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { OktaAuthHttpInterface } from '../http/types';\nimport {\n  AuthnTransactionFunction,\n  AuthnTransaction,\n  AuthnTransactionAPI,\n  AuthnTransactionState\n} from './types';\nimport { flattenEmbedded } from './util/flattenEmbedded';\n\nexport class AuthnTransactionImpl implements AuthnTransaction {\n  next?: AuthnTransactionFunction;\n  cancel?: AuthnTransactionFunction;\n  skip?: AuthnTransactionFunction;\n  unlock?: AuthnTransactionFunction;\n  changePassword?: AuthnTransactionFunction;\n  resetPassword?: AuthnTransactionFunction;\n  answer?: AuthnTransactionFunction;\n  recovery?: AuthnTransactionFunction;\n  verify?: AuthnTransactionFunction;\n  resend?: AuthnTransactionFunction;\n  activate?: AuthnTransactionFunction;\n  poll?: AuthnTransactionFunction;\n  prev?: AuthnTransactionFunction;\n\n  data?: AuthnTransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res: AuthnTransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, tx, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { RequestData, RequestOptions, OktaAuthHttpInterface } from '../http/types';\nimport {\n  introspectAuthn,\n  transactionStatus,\n  transactionExists,\n  resumeTransaction,\n  postToTransaction\n} from './api';\nimport { AuthnTransactionImpl } from './AuthnTransactionImpl';\nimport { AuthnTransactionAPI, AuthnTransactionState } from './types';\n\n// Factory\nexport function createAuthnTransactionAPI(sdk: OktaAuthHttpInterface): AuthnTransactionAPI {\n  const tx: AuthnTransactionAPI = {\n    status: transactionStatus.bind(null, sdk),\n    resume(args) {\n      return resumeTransaction(sdk, tx, args);\n    },\n    exists: transactionExists.bind(null, sdk),\n    introspect(args) {\n      return introspectAuthn(sdk, tx, args);\n    },\n    createTransaction: (res?: AuthnTransactionState) => {\n      return new AuthnTransactionImpl(sdk, tx, res);\n    },\n    postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n      return postToTransaction(sdk, tx, url, args, options);\n    }\n  };\n  return tx;\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { FingerprintAPI, OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n","\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthBaseOptions } from './types';\n\nexport function createBaseOptionsConstructor() {\n\n  return class BaseOptionsConstructor implements Required<OktaAuthBaseOptions> {\n    devMode: boolean;\n\n    constructor(args: any) {\n      this.devMode = !!args.devMode;\n    }\n  };\n\n}\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../base/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nconst isMessageFromCorrectSource = (iframe: HTMLIFrameElement, event: MessageEvent)\n: boolean => event.source === iframe.contentWindow;\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  const container = options?.container ?? document.body;\n  let timeout: NodeJS.Timeout;\n  let iframe: HTMLIFrameElement;\n  let listener: (this: Window, ev: MessageEvent) => void;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e: MessageEvent) {\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        iframe?.contentWindow?.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      iframe.parentElement?.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const IOS_MAX_RETRY_COUNT = 3;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from '../errors';\nimport {\n  EVENT_ADDED,\n  EVENT_REMOVED,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface\n} from '../oidc';\nimport {\n  AuthState,\n  AuthStateLogOptions,\n  OktaAuthCoreOptions,\n} from './types';\nimport { PromiseQueue, getConsole } from '../util';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\n{\n  _sdk: OktaAuthOAuthInterface<M, S, O>;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuthOAuthInterface<M, S, O>) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\n\n/**\n * Returns the current unix time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ret = Date.now() * 1000; // milliseconds to microseconds\n  if (ret <= lastMs) {\n    ret = lastMs + 1;\n  }\n  lastMs = ret;\n  return ret;\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet {\n    ttl;\n    map = new Map();\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    _to = false;\n    constructor(ttl) {\n        this.ttl = ttl;\n    }\n    has(value) {\n        return this.map.has(value);\n    }\n    add(value) {\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n    clear() {\n        this.map.clear();\n    }\n}\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        const next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return Date.now();\n}\n//# sourceMappingURL=index.js.map","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = Date.now();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = Date.now() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: Date.now(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    time: microSeconds(),\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport var SIMULATE_DELAY_TIME = 5;\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.forEach(function (channel) {\n        if (channel.name === channelState.name &&\n        // has same name\n        channel !== channelState &&\n        // not own channel\n        !!channel.messagesCallback &&\n        // has subscribers\n        channel.time < messageJson.time // channel not created after postMessage() call\n        ) {\n          channel.messagesCallback(messageJson);\n        }\n      });\n      res();\n    }, SIMULATE_DELAY_TIME);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return SIMULATE_DELAY_TIME;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        if (msgObj.time >= listenerObject.time) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}","import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (/* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var _tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              _tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    _tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} ","import { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { TokenManagerInterface } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nconst getNow = () => Math.floor(Date.now() / 1000);\n\nexport class RenewOnTabActivationService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private started = false;\n  private options: ServiceManagerOptions;\n  private lastHidden = -1;\n  onPageVisbilityChange: () => void;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    // store this context for event handler\n    this.onPageVisbilityChange = this._onPageVisbilityChange.bind(this);\n  }\n\n  // do not use directly, use `onPageVisbilityChange` (with binded this context)\n  /* eslint complexity: [0, 10] */\n  private _onPageVisbilityChange () {\n    if (document.hidden) {\n      this.lastHidden = getNow();\n    }\n    // renew will only attempt if tab was inactive for duration\n    else if (this.lastHidden > 0 && (getNow() - this.lastHidden >= this.options.tabInactivityDuration!)) {\n      const { accessToken, idToken } = this.tokenManager.getTokensSync();\n      if (!!accessToken && this.tokenManager.hasExpired(accessToken)) {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n      else if (!!idToken && this.tokenManager.hasExpired(idToken)) {\n        const key = this.tokenManager.getStorageKeyByType('idToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    }\n  }\n\n  async start () {\n    if (this.canStart() && !!document) {\n      document.addEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = true;\n    }\n  }\n\n  async stop () {\n    if (document) {\n      document.removeEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = false;\n    }\n  }\n\n  canStart(): boolean {\n    return isBrowser() &&\n    !!this.options.autoRenew &&\n    !!this.options.renewOnTabActivation &&\n    !this.started;\n  }\n\n  requiresLeadership(): boolean {\n    return false;\n  }\n\n  isStarted(): boolean {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService,\n  SyncStorageService,\n  LeaderElectionService,\n  RenewOnTabActivationService\n} from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\nconst RENEW_ON_TAB_ACTIVATION = 'renewOnTabActivation';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION, RENEW_ON_TAB_ACTIVATION];\n\n  private static defaultOptions: ServiceManagerOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true,\n    renewOnTabActivation: true,\n    tabInactivityDuration: 1800,    // 30 mins in seconds\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      case RENEW_ON_TAB_ACTIVATION:\n        service = new RenewOnTabActivationService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\n\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { createOktaAuthBase } from '../base';\nimport { mixinStorage } from '../storage/mixin';\nimport { mixinHttp } from '../http/mixin';\nimport { mixinOAuth } from '../oidc/mixin';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { mixinCore } from './mixin';\nimport { mixinSession } from '../session/mixin';\n\nexport function createOktaAuthCore<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n): OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  const Core = mixinCore<M, S, O, TM>(WithOAuth);\n  return Core;\n}\n","import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { AuthSdkError } from '../errors';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    async handleRedirect(originalUri?: string): Promise<void> {\n      await this.handleLoginRedirect(undefined, originalUri);\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n\n    handleIDPPopupRedirect (url = window.location.href) {\n      const res = parseOAuthResponseFromUrl(this, { responseMode: 'query', url });\n      if (res.state) {\n        const channel = new BroadcastChannel(`popup-callback:${res.state}`);\n        channel.postMessage(res);\n        channel.close();\n      }\n      else {\n        throw new AuthSdkError('Unable to parse auth code params');\n      }\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n","import { createOAuthStorageManager } from '../oidc/storage';\nimport { PKCETransactionMeta } from '../oidc/types';\n\nexport function createCoreStorageManager<M extends PKCETransactionMeta = PKCETransactionMeta>() {\n  return createOAuthStorageManager<M>();\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport type { HttpResponse } from '../http';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  resp: HttpResponse | null = null;\n\n  constructor(errorCode: string, summary: string, resp?: HttpResponse) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n\n    // an OAuth error (should) always result from a network request\n    // therefore include that in error for potential error handling\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport type { HttpResponse } from '../http';\nimport CustomError from './CustomError';\nimport { isFunction } from '../util';\n\n// Error thrown after an unsuccessful network request which requires an Authorization header \n// and returns a 4XX error with a www-authenticate header. The header value is parsed to construct \n// an error instance, which contains key/value pairs parsed out\nexport default class WWWAuthError extends CustomError {\n  static UNKNOWN_ERROR = 'UNKNOWN_WWW_AUTH_ERROR';\n\n  scheme: string;\n  parameters: Record<string, string>;\n  name = 'WWWAuthError';\n\n  resp: HttpResponse | null = null;\n\n  constructor(scheme: string, parameters: Record<string, string>, resp?: HttpResponse) {\n    // defaults to unknown error. `error` being returned in the www-authenticate header is expected\n    // but cannot be guaranteed. Throwing an error within a error constructor seems awkward\n    super(parameters.error ?? WWWAuthError.UNKNOWN_ERROR);\n    this.scheme = scheme;\n    this.parameters = parameters;\n\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n\n  // convenience references\n  get error (): string { return this.parameters.error; }\n  get errorCode (): string { return this.error; }                 // parity with other error props\n  // eslint-disable-next-line camelcase\n  get error_description (): string { return this.parameters.error_description; }\n  // eslint-disable-next-line camelcase\n  get errorDescription (): string { return this.error_description; }\n  get errorSummary (): string { return this.errorDescription; }   // parity with other error props\n  get realm (): string { return this.parameters.realm; }\n\n  // parses the www-authenticate header for releveant\n  static parseHeader (header: string): WWWAuthError | null {\n    // header cannot be empty string\n    if (!header) {\n      return null;\n    }\n\n    // example string: Bearer error=\"invalid_token\", error_description=\"The access token is invalid\"\n    // regex will match on `error=\"invalid_token\", error_description=\"The access token is invalid\"`\n    // see unit test for more examples of possible www-authenticate values\n    // eslint-disable-next-line max-len\n    const regex = /(?:,|, )?([a-zA-Z0-9!#$%&'*+\\-.^_`|~]+)=(?:\"([a-zA-Z0-9!#$%&'*+\\-.,^_`|~ /:]+)\"|([a-zA-Z0-9!#$%&'*+\\-.^_`|~/:]+))/g;\n    const firstSpace = header.indexOf(' ');\n    const scheme = header.slice(0, firstSpace);\n    const remaining = header.slice(firstSpace + 1);\n    const params = {};\n\n    // Reference: foo=\"hello\", bar=\"bye\"\n    // i=0, match=[foo=\"hello1\", foo, hello]\n    // i=1, match=[bar=\"bye\", bar, bye]\n    let match;\n    while ((match = regex.exec(remaining)) !== null) {\n      params[match[1]] = (match[2] ?? match[3]);\n    }\n\n    return new WWWAuthError(scheme, params);\n  }\n\n  // finds the value of the `www-authenticate` header. HeadersInit allows for a few different\n  // representations of headers with different access patterns (.get vs [key])\n  static getWWWAuthenticateHeader (headers: HeadersInit = {}): string | null {\n    if (isFunction((headers as Headers)?.get)) {\n      return (headers as Headers).get('WWW-Authenticate');\n    }\n    return headers['www-authenticate'] ?? headers['WWW-Authenticate'];\n  }\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\nimport WWWAuthError from './WWWAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nfunction isWWWAuthError(obj: any): obj is WWWAuthError {\n  return (obj instanceof WWWAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  isWWWAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError,\n  WWWAuthError\n};\n\nexport * from './types';\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nfunction isWebCryptoSubtleSupported () {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function isTokenVerifySupported() {\n  return isWebCryptoSubtleSupported();\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n// For now, DPoP is only supported on browsers\nexport function isDPoPSupported () {\n  return !isIE11OrLess() &&\n    typeof window.indexedDB !== 'undefined' &&\n    hasTextEncoder() &&\n    isWebCryptoSubtleSupported();\n}\n\nexport function isIOS () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return isBrowser() && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' &&\n    // @ts-expect-error - MSStream is not in `window` type, unsurprisingly\n    (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from '../features';\nexport class OktaUserAgent {\n  environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n    this.maybeAddNodeEnvironment();\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthHttpInterface } from './types';\n\nexport function setRequestHeader(authClient: OktaAuthHttpInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../http/types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    pollDelay: number;\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n      this.pollDelay = args.pollDelay;\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport {\n  STATE_TOKEN_KEY_NAME,\n  DEFAULT_CACHE_DURATION,\n  IOS_MAX_RETRY_COUNT,\n} from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, APIError, WWWAuthError } from '../errors';\nimport { isBrowser } from '../features';\n\n\n// For iOS track last date when document became visible\nlet dateDocumentBecameVisible = 0;\nlet trackDateDocumentBecameVisible: () => void;\nif (isBrowser()) {\n  dateDocumentBecameVisible = Date.now();\n  trackDateDocumentBecameVisible = () => {\n    if (!document.hidden) {\n      dateDocumentBecameVisible = Date.now();\n    }\n  };\n  document.addEventListener('visibilitychange', trackDateDocumentBecameVisible);\n}\n\nconst formatError = (sdk: OktaAuthHttpInterface, error: HttpResponse | Error): AuthApiError | OAuthError => {\n  if (error instanceof Error) {\n    // fetch() can throw exceptions\n    // see https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n    return new AuthApiError({\n      errorSummary: error.message,\n    });\n  }\n\n  let resp: HttpResponse = error;\n  let err: AuthApiError | OAuthError | WWWAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  // \n  const wwwAuthHeader = WWWAuthError.getWWWAuthenticateHeader(resp?.headers) ?? '';\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description, resp);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp, { wwwAuthHeader });\n  }\n\n  if (wwwAuthHeader && resp?.status >= 400 && resp?.status < 500) {\n    const wwwAuthErr = WWWAuthError.parseHeader(wwwAuthHeader);\n    // check for 403 to avoid breaking change\n    if (resp.status === 403 && wwwAuthErr?.error === 'insufficient_authentication_context') {\n      // eslint-disable-next-line camelcase\n      const { max_age, acr_values } = wwwAuthErr.parameters;\n      err = new AuthApiError(\n        {\n          errorSummary: wwwAuthErr.error,\n          errorCauses: [{ errorSummary: wwwAuthErr.errorDescription }]\n        },\n        resp,\n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n    else if (wwwAuthErr?.scheme === 'DPoP') {\n      err = wwwAuthErr;\n    }\n    // else {\n    //   // WWWAuthError.parseHeader may return null, only overwrite if !null\n    //   err = wwwAuthErr ?? err;\n    // }\n  }\n\n  return err;\n};\n\n// eslint-disable-next-line max-statements\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies),\n      pollingIntent = options.pollingIntent,\n      pollDelay = sdk.options.pollDelay ?? 0;\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res, promise;\n\n  if (pollingIntent && isBrowser() && pollDelay > 0) {\n    let waitForVisibleAndAwakenDocument: () => Promise<void>;\n    let waitForAwakenDocument: () => Promise<void>;\n    let recursiveFetch: () => Promise<HttpResponse>;\n    let retryCount = 0;\n\n    // Safari on iOS has a bug:\n    //  Performing `fetch` right after document became visible can fail with `Load failed` error.\n    // Running fetch after short timeout fixes this issue.\n    waitForAwakenDocument = () => {\n      const timeSinceDocumentIsVisible = Date.now() - dateDocumentBecameVisible;\n      if (timeSinceDocumentIsVisible < pollDelay) {\n        return new Promise<void>((resolve) => setTimeout(() => {\n          if (!document.hidden) {\n            resolve();\n          } else {\n            resolve(waitForVisibleAndAwakenDocument());\n          }\n        }, pollDelay - timeSinceDocumentIsVisible));\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    // Returns a promise that resolves when document is visible for 500 ms\n    waitForVisibleAndAwakenDocument = () => {\n      if (document.hidden) {\n        let pageVisibilityHandler: () => void;\n        return new Promise<void>((resolve) => {\n          pageVisibilityHandler = () => {\n            if (!document.hidden) {\n              document.removeEventListener('visibilitychange', pageVisibilityHandler);\n              resolve(waitForAwakenDocument());\n            }\n          };\n          document.addEventListener('visibilitychange', pageVisibilityHandler);\n        });\n      } else {\n        return waitForAwakenDocument();\n      }\n    };\n\n    // Restarts fetch on 'Load failed' error\n    // This error can occur when `fetch` does not respond\n    //  (due to CORS error, non-existing host, or network error)\n    const retryableFetch = (): Promise<HttpResponse> => {\n      return sdk.options.httpRequestClient!(method!, url!, ajaxOptions).catch((err) => {\n        const isNetworkError = err?.message === 'Load failed';\n        if (isNetworkError && retryCount < IOS_MAX_RETRY_COUNT) {\n          retryCount++;\n          return recursiveFetch();\n        }\n        throw err;\n      });\n    };\n\n    // Final promise to fetch that wraps logic with waiting for visible document\n    //  and retrying fetch request on network error\n    recursiveFetch = (): Promise<HttpResponse> => {\n      return waitForVisibleAndAwakenDocument().then(retryableFetch);\n    };\n\n    promise = recursiveFetch();\n  } else {\n    promise = sdk.options.httpRequestClient!(method!, url!, ajaxOptions);\n  }\n\n  return promise\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","import { ClearTransactionMetaOptions, TransactionManagerOptions } from '../oidc/types';\nimport { createTransactionManager } from '../oidc/TransactionManager';\nimport { IdxTransactionMeta, IntrospectOptions } from './types';\nimport { isRawIdxResponse } from './types/idx-js';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './types/storage';\n\nexport function createIdxTransactionManager\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>\n>\n()\n{\n  const TransactionManager = createTransactionManager<M, S>();\n  return class IdxTransactionManager extends TransactionManager\n  {\n    constructor(options: TransactionManagerOptions) {\n      super(options);\n    }\n\n    clear(options: ClearTransactionMetaOptions = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    \n    saveIdxResponse(data: SavedIdxResponse): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n\n    // eslint-disable-next-line complexity\n    loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const { stateHandle, interactionHandle } = options;\n        // only perform this check if NOT using generic remediator\n        if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse(): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage?.clearStorage();\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from './types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | boolean | number | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  passcode?: string;\n  credentials?: Credentials;\n  // for ResetAuthenticator\n  revokeSessions?: boolean;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password, passcode, revokeSessions } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || {\n      passcode: passcode || password,\n      revokeSessions,\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    const inputs = [{\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required,\n    }];\n    const revokeSessions = idxRemediationValue.form?.value.find(\n      input => input.name === 'revokeSessions'\n    );\n    if (revokeSessions) {\n      inputs.push({\n        name: 'revokeSessions',\n        type: 'boolean',\n        label: 'Sign me out of all other devices',\n        required: false,\n      });\n    }\n    return inputs;\n  }\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from './types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from './types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\nimport { EmailVerifyCallbackResponse } from './types/api';\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","import { createOktaAuthCore } from '../../core/factory';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, OktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { mixinIdx } from '../mixin';\nimport { TransactionManagerConstructor } from '../../oidc/types';\nimport { OktaAuthCoreInterface } from '../../core/types';\n\nexport function createOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM> & OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Core = createOktaAuthCore<M, S, O, TM>(\n    StorageManagerConstructor,\n    OptionsConstructor,\n    TransactionManagerConstructor\n  );\n  const WithIdx = mixinIdx(Core);\n  return WithIdx;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { isInteractionRequired, isInteractionRequiredError } from '../../oidc';\nimport { authenticate } from '../authenticate';\nimport { cancel } from '../cancel';\nimport {\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  isEmailVerifyCallbackError,\n  parseEmailVerifyCallback\n} from '../emailVerify';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect';\nimport { makeIdxState } from '../idxState';\nimport { interact } from '../interact';\nimport { introspect } from '../introspect';\nimport { poll } from '../poll';\nimport { canProceed, proceed } from '../proceed';\nimport { recoverPassword } from '../recoverPassword';\nimport { register } from '../register';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { FlowIdentifier, IdxAPI, OktaAuthIdxInterface } from '../types';\nimport { unlockAccount } from '../unlockAccount';\nimport * as remediators from '../remediators';\nimport { getFlowSpecification } from '../flow/FlowSpecification';\nimport { setRemediatorsCtx } from '../util';\n\n// Factory\nexport function createIdxAPI(sdk: OktaAuthIdxInterface): IdxAPI {\n  setRemediatorsCtx({\n    remediators,\n    getFlowSpecification,\n  });\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    \n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n\n    // oauth redirect callback\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n\n    // interaction required callback\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n\n    // email verify callback\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: (flow: FlowIdentifier) => {\n      sdk.options.flow = flow;\n    },\n    getFlow: (): FlowIdentifier | undefined => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk),\n  };\n  return idx;\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData,\n  ReEnrollAuthenticatorWarning\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n};\n","import { OktaAuthIdxInterface, FlowIdentifier, FlowSpecification } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest, RequestOptions } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const options: RequestOptions = {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      };\n      const isPolling = actionDefinition.name === 'poll' || actionDefinition.name?.endsWith('-poll');\n      if (isPolling) {\n        options.pollingIntent = true;\n      }\n      const response = await httpRequest(authClient, options);\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxRemediation } from '../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue: IdxRemediation[],\n  toPersist = {}\n) {\n  return remediationValue.reduce((obj, remediation) => ({\n    ...obj,\n    [remediation.name]: generateIdxAction(authClient, remediation, toPersist)\n  }), {});\n};\n","const jsonpathRegex = /\\$?(?<step>\\w+)|(?:\\[(?<index>\\d+)\\])/g;\n\n/* eslint complexity:[0,8] */\nexport function jsonpath({ path, json }) {\n  const steps: string[] = [];\n  let match: RegExpExecArray | null;\n  while ((match = jsonpathRegex.exec(path)) !== null) {\n    const step = match?.groups?.step ?? match?.groups?.index;\n    if (step) {\n      steps.push(step);\n    }\n  }\n\n  if (steps.length < 1) {\n    return undefined;\n  }\n\n  // array length check above guarantees .pop() will return a value\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const lastStep = steps.pop()!;\n  let curr = json;\n  for (const step of steps) {\n    if (Object.prototype.hasOwnProperty.call(curr, step)) {\n      if (typeof curr[step] !== 'object') {\n        return undefined;\n      }\n\n      curr = curr[step];\n    }\n  }\n\n  return curr[lastStep];\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n\nimport { OktaAuthIdxInterface, IdxResponse, IdxRemediation, IdxContext } from '../../types';    // auth-js/types\nimport { IdxActions } from '../../types/idx-js';\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { jsonpath } from '../../../util/jsonpath';\nimport { AuthSdkError } from '../../../errors';\n\nconst SKIP_FIELDS = {\n  'remediation': true, // remediations are put into proceed/neededToProceed\n  'context': true, // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n};\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse: IdxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {} as IdxContext;\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries<IdxRemediation>(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        const result = jsonpath({ path: query, json: idxResponse });\n        if (result) {\n          value[k] = result;\n          return;\n        } else {\n          throw new AuthSdkError(`Cannot resolve relatesTo: ${query}`);\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n\n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => {\n      // TODO: remove once IDX is fixed - OKTA-659181\n      if (remediation.name === 'launch-authenticator' &&\n        remediation?.relatesTo?.[0] === 'authenticatorChallenge' &&\n        !idxResponse?.authenticatorChallenge\n      ) {\n        delete remediation.relatesTo;\n        return;\n      }\n\n      return expandRelatesTo(idxResponse, remediation);\n    }\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist, IdxActionParams } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action!(paramsFromUser as IdxActionParams);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { MinimalOktaOAuthInterface } from '../oidc/types';\nimport {\n  IdxTransactionManagerInterface,\n  OktaAuthIdxConstructor,\n  OktaAuthIdxOptions,\n  MinimalIdxAPI,\n  WebauthnAPI,\n  MinimalOktaAuthIdxInterface\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createMinimalIdxAPI } from '../idx/factory/minimalApi';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinMinimalIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n>\n(\n  Base: TBase\n): TBase & OktaAuthIdxConstructor<MinimalOktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements MinimalOktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: MinimalIdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createMinimalIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { makeIdxState } from '../idxState';\nimport { canProceed, proceed } from '../proceed';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { MinimalIdxAPI, MinimalOktaAuthIdxInterface, OktaAuthIdxInterface } from '../types';\n\n// Factory\nexport function createMinimalIdxAPI(minimalSdk: MinimalOktaAuthIdxInterface): MinimalIdxAPI {\n  const sdk = minimalSdk as OktaAuthIdxInterface;\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    proceed: proceed.bind(null, sdk),\n    canProceed: canProceed.bind(null, sdk),\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n  };\n  return idx;\n}\n\n","\nimport { OktaAuthConstructor } from '../../base/types';\nimport {\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  MinimalOktaOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  BaseTokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n} from '../types';\nimport { createBaseTokenAPI } from '../factory/baseApi';\nimport { isLoginRedirect, hasResponseType } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nexport function mixinMinimalOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n{\n  return class OktaAuthOAuth extends Base implements MinimalOktaOAuthInterface<M, S, O, TM>\n  {\n    token: BaseTokenAPI;\n    transactionManager: TM;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.token = createBaseTokenAPI(this as any);\n    }\n\n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this as any);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n\n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport {\n  OktaAuthOAuthInterface,\n  BaseTokenAPI,\n} from '../types';\nimport { prepareTokenParams } from '../util';\n\n// Factory\nexport function createBaseTokenAPI(sdk: OktaAuthOAuthInterface): BaseTokenAPI {\n  const token: BaseTokenAPI = {\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    decode: decodeToken,\n  };\n\n  return token;\n}\n","import { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, MinimalOktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { TransactionManagerConstructor, MinimalOktaOAuthInterface } from '../../oidc/types';\nimport { mixinMinimalIdx } from '../mixinMinimal';\nimport { createOktaAuthBase } from '../../base/factory';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinMinimalOAuth } from '../../oidc/mixin/minimal';\n\nexport function createMinimalOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<\n  MinimalOktaAuthIdxInterface<M, S, O, TM> & MinimalOktaOAuthInterface<M, S, O, TM>\n>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinMinimalOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  // do not mixin core\n  const WithIdx = mixinMinimalIdx(WithOAuth);\n  return WithIdx;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\nimport {\n  IdxAPI, \n  IdxTransactionManagerInterface, \n  OktaAuthIdxInterface, \n  OktaAuthIdxConstructor, \n  OktaAuthIdxOptions, \n  WebauthnAPI\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createIdxAPI } from './factory/api';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements OktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: IdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  const { withCredentials, exchangeCodeForTokens } = options;\n  let transaction = await proceed(authClient, {\n    startPolling: true,\n    withCredentials,\n    exchangeCodeForTokens\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from './types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  mapAuthenticator() {\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types/api';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { OktaAuthIdxInterface, NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  remediationName: string;\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(context?: IdxContext): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n","import { OktaAuthIdxInterface, IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n  rememberMe?: boolean;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ReEnrollAuthenticator } from './ReEnrollAuthenticator';\n\nexport class ReEnrollAuthenticatorWarning extends ReEnrollAuthenticator {\n  static remediationName = 'reenroll-authenticator-warning';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { OktaAuthIdxInterface, RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleFailedResponse\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(idxResponse, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        idxResponse = await idxResponse.actions[action](params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        idxResponse = await idxResponse.proceed(action, params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal };\n  }\n\n  if (!remediator) {\n    // With options.step, remediator is not required\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      idxResponse = await idxResponse.proceed(options.step, values);\n      if (idxResponse.requestDidSucceed === false) {\n        return handleFailedResponse(authClient, idxResponse, options);\n      }\n      return { idxResponse };\n    }\n\n    // With default flow, remediator is not required\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n\n  idxResponse = await idxResponse.proceed(name, data);\n  if (idxResponse.requestDidSucceed === false) {\n    return handleFailedResponse(authClient, idxResponse, options);\n  }\n  // We may want to trim the values bag for the next remediation\n  // Let the remediator decide what the values should be (default to current values)\n  values = remediator.getValuesAfterProceed();\n  options = { ...options, step: undefined }; // do not re-use the step\n\n  // generic remediator should not auto proceed in pending status\n  // return nextStep directly\n  if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const gr = getRemediator(idxResponse, values, options)!;\n    const nextStep = getNextStep(authClient, gr, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n  \n  return remediate(authClient, idxResponse, values, options); // recursive call\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { RemediationValues } from './remediators/Base/Remediator';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n} from './types';\nimport { IdxMessage, IdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport {\n  getAvailableSteps,\n  getEnabledFeatures,\n  getMessagesFromResponse,\n  isTerminalResponse,\n  getFlowSpecification\n} from './util';\nimport { Tokens } from '../oidc/types';\nimport { APIError } from '../errors/types';\ndeclare interface RunData {\n  options: RunOptions;\n  values: RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient: OktaAuthIdxInterface, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow?.() || 'default';\n  if (flow) {\n    authClient.idx.setFlow?.(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n    acrValues,\n    nonce,\n    useGenericRemediator,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle, useGenericRemediator });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n        acrValues,\n        nonce,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle, useGenericRemediator });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient: OktaAuthIdxInterface, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse, options);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // save response if there are actions available (ignore messages)\n      shouldSaveResponse = !!hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  data = await getDataFromIntrospect(authClient, data);\n  data = await getDataFromRemediate(authClient, data);\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","import { CookieOptions, StorageManagerOptions, StorageOptions, StorageUtil } from '../storage/types';\nimport {  IdxTransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants';\nimport { createCoreStorageManager } from '../core/storage';\nimport { IdxResponseStorage } from './types/storage';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\n\nexport function createIdxStorageManager<M extends IdxTransactionMeta>()\n{\n  const CoreStorageManager = createCoreStorageManager<M>();\n  return class IdxStorageManager extends CoreStorageManager\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    // intermediate idxResponse\n    // store for network traffic optimazation purpose\n    // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n    getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n      let storage;\n      if (isBrowser()) {\n        // on browser side only use memory storage \n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          // it's ok to miss response storage\n          // eslint-disable-next-line max-len\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        // on server side re-use transaction custom storage\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, IdxTransactionMetaOptions } from './types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta, PKCETransactionMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: IdxTransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n    acrValues = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: IdxTransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { APIError } from '../../errors/types';\nimport {\n  OktaAuthOAuthInterface,\n  MinimalOktaOAuthInterface,\n  Tokens,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../../oidc/types';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n  IdxToPersist,\n  ChallengeData,\n  ActivationData,\n} from './idx-js';\nimport {\n  IdxOptions,\n  AccountUnlockOptions,\n  AuthenticationOptions,\n  CancelOptions,\n  InteractOptions,\n  IntrospectOptions,\n  OktaAuthIdxOptions,\n  PasswordRecoveryOptions,\n  ProceedOptions,\n  RegistrationOptions,\n  StartOptions,\n  IdxTransactionMetaOptions\n} from './options';\nimport { IdxTransactionMeta } from './meta';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './storage';\nimport type {\n  WebauthnEnrollValues,\n  WebauthnVerificationValues\n} from '../authenticator';\nimport { OktaAuthConstructor, FingerprintAPI } from '../../base/types';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n  customLabel?: boolean\n}\n\n\nexport interface IdxPollOptions extends Pick<IdxOptions, 'exchangeCodeForTokens' | 'withCredentials' > {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n  channel?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport interface MinimalIdxAPI {\n  // lowest level api\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxAPI {\n  // lowest level api\n  interact: (options?: InteractOptions) => Promise<InteractResponse>;\n  introspect: (options?: IntrospectOptions) => Promise<IdxResponse>;\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow entrypoints\n  authenticate: (options?: AuthenticationOptions) => Promise<IdxTransaction>;\n  register: (options?: RegistrationOptions) => Promise<IdxTransaction>;\n  recoverPassword: (options?: PasswordRecoveryOptions) => Promise<IdxTransaction>;\n  unlockAccount: (options?: AccountUnlockOptions) => Promise<IdxTransaction>;\n  poll: (options?: IdxPollOptions) => Promise<IdxTransaction>;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n  cancel: (options?: CancelOptions) => Promise<IdxTransaction>;\n  getFlow(): FlowIdentifier | undefined;\n  setFlow(flow: FlowIdentifier): void;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // redirect callbacks\n  isInteractionRequired: (hashOrSearch?: string) => boolean;\n  isInteractionRequiredError: (error: Error) => boolean; \n  handleInteractionCodeRedirect: (url: string) => Promise<void>;\n  isEmailVerifyCallback: (search: string) => boolean;\n  parseEmailVerifyCallback: (search: string) => EmailVerifyCallbackResponse;\n  handleEmailVerifyCallback: (search: string) => Promise<IdxTransaction | undefined>;\n  isEmailVerifyCallbackError: (error: Error) => boolean;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxTransactionManagerInterface extends TransactionManagerInterface {\n  saveIdxResponse(data: SavedIdxResponse): void;\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null;\n  clearIdxResponse(): void;\n}\n\nexport type IdxTransactionManagerConstructor = TransactionManagerConstructor<IdxTransactionManagerInterface>;\n\nexport interface WebauthnAPI {\n  getAssertion(credential: PublicKeyCredential): WebauthnVerificationValues;\n  getAttestation(credential: PublicKeyCredential): WebauthnEnrollValues;\n  buildCredentialRequestOptions(\n    challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialRequestOptions;\n  buildCredentialCreationOptions(\n    activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialCreationOptions;\n}\n\n\nexport interface OktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends OktaAuthOAuthInterface<M, S, O, TM>\n{\n  idx: IdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface MinimalOktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends MinimalOktaOAuthInterface<M, S, O, TM>\n{\n  idx: MinimalIdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface OktaAuthIdxConstructor\n<\n  I extends MinimalOktaAuthIdxInterface = OktaAuthIdxInterface\n>\n extends OktaAuthConstructor<I>\n{\n  new(...args: any[]): I;\n  webauthn: WebauthnAPI;\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n  profile?: Record<string, unknown>;\n  resend?: Record<string, unknown>;\n  poll?: Record<string, unknown>;\n  recover?: Record<string, unknown>;\n  deviceKnown?: boolean;\n  nickname?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  uiDisplay?: IdxContextUIDisplay\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxContextUIDisplay {\n  type: string;\n  value: {\n    label?: string;\n    buttonLabel?: string;\n  }\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n  currentAuthenticator?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from './types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from '../crypto/base64';\nimport {\n  ActivationData,\n  ChallengeData,\n  IdxAuthenticator,\n} from './types';\n\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { AccessToken } from '../../oidc/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\nexport type TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype TransactionOptions = {\n  // TODO: move res type to http module\n  res: {\n    headers: Record<string, string>;\n    _links?: Record<string, TransactionLink>;\n    [property: string]: unknown;\n  };\n  accessToken: string | AccessToken;\n};\n\nexport default class BaseTransaction {\n  // Deprecated\n  headers?: Record<string, string>;\n\n  constructor(oktaAuth: OktaAuthHttpInterface, options: TransactionOptions) {\n    const { res } = options;\n    const { headers, ...rest } = res;\n    \n    // assign required fields from res\n    if (headers) {\n      this.headers = headers;\n    }\n\n    // add all rest fields from res\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\n\nexport interface TransactionType<T extends BaseTransaction = BaseTransaction> extends Function {\n  new (oktaAuth: OktaAuthHttpInterface, options: TransactionOptions): T;\n  prototype: T;\n}\n","import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { RequestOptions as HttpRequestOptions } from '../http/types';\nimport { AccessToken, OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n\n  const atToken = options.accessToken || accessTokenObj;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!atToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n\n  let accessToken: string | AccessToken = atToken;\n\n  const httpOptions: HttpRequestOptions = {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  };\n\n  if (oktaAuth.options.dpop) {\n    if (typeof accessToken === 'string') {\n      throw new AuthSdkError('AccessToken object must be provided when using dpop');\n    }\n\n    const { Authorization, Dpop } = await oktaAuth.getDPoPAuthorizationHeaders({\n      method,\n      url: requestUrl,\n      accessToken\n    });\n    httpOptions.headers!.Authorization = Authorization;\n    httpOptions.headers!.Dpop = Dpop;\n  }\n  else {\n    accessToken = typeof accessToken === 'string' ? accessToken : accessToken.accessToken;\n    httpOptions.accessToken = accessToken;\n  }\n\n  const res = await httpRequest(oktaAuth, httpOptions);\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string | AccessToken;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileTransaction extends BaseTransaction {\n  createdAt: string;\n  modifiedAt: string;\n  profile: Record<string, string>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { createdAt, modifiedAt, profile } = options.res;\n    this.createdAt = createdAt;\n    this.modifiedAt = modifiedAt;\n    this.profile = profile;\n  }\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileSchemaTransaction extends BaseTransaction {\n  properties: Record<string, object>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    this.properties = options.res.properties;\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileSchemaTransaction);\n  return transaction;\n};\n","import { EmailProfile, Status } from '../types';\nimport BaseTransaction from './Base';\n\nexport default class EmailStatusTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res } = options;\n    // assign required fields from res\n    const { id, profile, expiresAt, status } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n}\n","import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n      }, EmailStatusTransaction);\n      return await fn();\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn(payload);\n    };\n  }\n}\n","import EmailChallengeTransaction from './EmailChallengeTransaction';\nimport EmailStatusTransaction from './EmailStatusTransaction';\nimport { EmailProfile, EmailRole, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailTransaction extends BaseTransaction {\n  id: string;\n  profile: EmailProfile;\n  roles: EmailRole[];\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<EmailTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: () => Promise<EmailChallengeTransaction>;\n  poll?: () => Promise<EmailStatusTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, profile, roles, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, EmailTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn();\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'poll', \n          links: _links,\n        }, EmailStatusTransaction);\n        return await fn();\n      };\n    }\n    if (_links.verify) {\n      this.verify = async (payload: VerificationPayload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links,\n        });\n        return await fn(payload);\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  EmailTransaction, \n  EmailChallengeTransaction \n} from './transactions';\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmails: IAPIFunction<EmailTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<EmailTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'GET',\n    accessToken: options?.accessToken\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'GET',\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const addEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n): Promise<EmailTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const deleteEmail: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'DELETE',\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const sendEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}/challenge`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { emailId, challengeId, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const verifyEmailChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { emailId, challengeId, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { ChallengePhonePayload, PhoneProfile, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PhoneTransaction extends BaseTransaction {\n  id: string;\n  profile: PhoneProfile;\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<PhoneTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: (payload: ChallengePhonePayload) => Promise<BaseTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, profile, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, PhoneTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links \n      });\n      return await fn(payload);\n    };\n    if (_links.verify) {\n      this.verify = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links \n        });\n        return await fn(payload);\n      } ;\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PhoneTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhones: IAPIFunction<PhoneTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<PhoneTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { accessToken, id } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'GET',\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const addPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PhoneTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const deletePhone: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'DELETE',\n    accessToken,\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const sendPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { accessToken, id, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/challenge`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const verifyPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { id, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn();\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn();\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PasswordTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  });\n  return transaction;\n};\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { createOktaAuthCore } from '../core/factory';\nimport { OktaAuthCoreOptions } from '../core/types';\nimport { mixinMyAccount } from './mixin';\nimport { OktaAuthMyAccountInterface } from './types';\n\nexport function createOktaAuthMyAccount\n<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManager: TransactionManagerConstructor<TM>\n)\n: OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  const Core = createOktaAuthCore<M, S, O>(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount<M, S, O>(Core);\n  return WithMyAccount;\n}\n","import { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n} from '../oidc/types';\nimport { OktaAuthMyAccountInterface } from './types';\n\nimport * as MyAccountMethods from './api';\n\nexport function mixinMyAccount\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  return class OktaAuthMyAccount extends Base implements OktaAuthMyAccountInterface<M, S, O>\n  {\n    myaccount: any;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.myaccount = Object.entries(MyAccountMethods)\n        .filter(([ name ]) => name !== 'default')\n        .reduce((acc, [name, fn]) => {\n          acc[name] = (fn as any).bind(null, this);\n          return acc;\n        }, {});\n    }\n  };\n}\n","import {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  AccessToken\n} from '../oidc/types';\n\nexport type { \n  EmailTransaction, \n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  PhoneTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PasswordTransaction,\n  BaseTransaction\n} from './transactions';\n\nexport enum EmailRole {\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY'\n}\n\nexport enum Status {\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED'\n}\n\nexport enum PasswordStatus {\n  NOT_ENROLLED = 'NOT_ENROLLED',\n  ACTIVE = 'ACTIVE'\n}\n\nexport type EmailProfile = {\n  email: string;\n}\n\nexport type AddEmailPayload = {\n  profile: {\n    email: string;\n  };\n  sendEmail: boolean;\n  role: EmailRole;\n}\n\nexport type PhoneProfile = {\n  profile: {\n    phoneNumber: string;\n  };\n}\n\nexport type AddPhonePayload = {\n  profile: {\n    phoneNumber: string;\n  };\n  sendCode: boolean;\n  method: string;\n};\n\nexport type ChallengePhonePayload = {\n  method: string;\n}\n\nexport type VerificationPayload = {\n  verificationCode: string;\n};\n\nexport type EnrollPasswordPayload = {\n  profile: {\n    password: string;\n  }\n}\n\nexport type UpdatePasswordPayload = {\n  profile: {\n    password: string;\n    currentPassword?: string;\n  }\n}\n\nexport type UpdateProfilePayload = {\n  profile: {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    login?: string;\n    [property: string]: any;\n  };\n};\n\nexport type MyAccountRequestOptions = {\n  id?: string;\n  emailId?: string;\n  challengeId?: string;\n  payload?: AddEmailPayload \n    | AddPhonePayload \n    | ChallengePhonePayload\n    | VerificationPayload \n    | UpdateProfilePayload\n    | EnrollPasswordPayload\n    | UpdatePasswordPayload;\n  accessToken?: string | AccessToken;\n}\n\nexport type IAPIFunction<T> = (\n  oktaAuth: OktaAuthOAuthInterface, \n  options?: MyAccountRequestOptions\n) => Promise<T>;\n\nexport interface OktaAuthMyAccountInterface\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions\n> \n  extends OktaAuthOAuthInterface<M, S, O>\n{\n  myaccount;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from '../util';\nimport { AuthSdkError } from '../errors';\nimport { validateToken  } from '../oidc/util';\nimport { isLocalhost, isIE11OrLess } from '../features';\nimport SdkClock from '../clock';\nimport {\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent,\n  OktaAuthOAuthInterface\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from '../constants';\nimport { EventEmitter } from '../base/types';\nimport { StorageOptions, StorageProvider, StorageType } from '../storage/types';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n  started?: boolean;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthOAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthOAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n    this.state.started = true;\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n    this.state.started = false;\n  }\n\n  isStarted() {\n    return !!this.state.started;\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key): Token | undefined {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key): Promise<Token | undefined> {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n\n    try {\n      var token = this.getSync(key);\n      let shouldRenew = token !== undefined;\n      // explicitly check if key='accessToken' because token keys are not guaranteed (long story, features dragons)\n      if (!token && key === 'accessToken') {\n        // attempt token renewal if refresh token is present (improves consistency of autoRenew)\n        const refreshKey = this.getStorageKeyByType('refreshToken');\n        const refreshToken = this.getSync(refreshKey);\n        shouldRenew = refreshToken !== undefined;\n      }\n\n      if (!shouldRenew) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    }\n    catch (err) {\n      this.emitError(err);\n      return Promise.reject(err);\n    }\n\n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    const renewPromise = this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // return accessToken in case where access token doesn't exist\n        // but refresh token exists\n        if (!token && key === 'accessToken') {\n          const accessToken = tokens['accessToken'];\n          this.emitRenewed(key, accessToken, null);\n          return accessToken;\n        }\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token!);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","import { OAuthStorageManagerInterface, OAuthTransactionMeta, isTransactionMeta } from '../types';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage<M extends OAuthTransactionMeta>(storageManager: OAuthStorageManagerInterface<M>) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string, meta: M\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageProvider } from '../storage/types';\nimport {\n  TransactionMeta,\n  isTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n  ClearTransactionMetaOptions,\n  TransactionManagerInterface,\n  PKCETransactionMeta\n} from './types';\nimport { warn } from '../util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\n\nexport function createTransactionManager\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>\n>\n()\n{\n  return class TransactionManager implements TransactionManagerInterface\n  {\n    options: TransactionManagerOptions;\n    storageManager: S;\n    enableSharedStorage: boolean;\n    saveLastResponse: boolean;\n\n    constructor(options: TransactionManagerOptions) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.storageManager = options.storageManager! as S;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    // eslint-disable-next-line complexity\n    clear(options: ClearTransactionMetaOptions = {}) {\n      const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n\n      // Clear primary storage (by default, sessionStorage on browser)\n      transactionStorage.clearStorage();\n\n      // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || meta?.state;\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    // eslint-disable-next-line complexity\n    save(meta: M, options: TransactionMetaOptions = {}) {\n      // There must be only one transaction executing at a time.\n      // Before saving, check to see if a transaction is already stored.\n      // An existing transaction indicates a concurrency/race/overlap condition\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n      // oie process may need to update transaction in the middle of process for tracking purpose\n      // false alarm might be caused \n      // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        // eslint-disable-next-line max-len\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      // Shared storage allows continuation of transaction in another tab\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options: TransactionMetaOptions = {}): boolean {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch {\n        return false;\n      }\n    }\n\n    // load transaction meta from storage\n    // eslint-disable-next-line complexity,max-statements\n    load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n      let meta: TransactionMeta;\n\n      // If state was passed, try loading transaction data from shared storage\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager); // prune before load\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        // if we have meta in the new location, there is no need to go further\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from './types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","// References:\n// https://www.w3.org/TR/WebCryptoAPI/#concepts-key-storage\n// https://datatracker.ietf.org/doc/html/rfc9449\n\nimport {\n  webcrypto,\n  stringToBase64Url,\n  stringToBuffer,\n  bufferToBase64Url,\n  base64ToBase64Url,\n  btoa\n} from '../crypto';\nimport { AuthSdkError, OAuthError, WWWAuthError, isOAuthError, isWWWAuthError } from '../errors';\nimport { Tokens } from './types';\n\nexport interface DPoPClaims {\n  htm: string;\n  htu: string;\n  iat: number;\n  jti: string;\n  nonce?: string;\n  ath?: string;\n}\n\nexport interface DPoPProofParams {\n  keyPair: CryptoKeyPair;\n  url: string;\n  method: string;\n  nonce?: string;\n  accessToken?: string;\n}\n\nexport type ResourceDPoPProofParams = Omit<DPoPProofParams, 'keyPair' | 'nonce'>;\ntype DPoPProofTokenRequestParams = Omit<DPoPProofParams, 'accessToken'>;\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\n\nexport function isDPoPNonceError(obj: any): obj is OAuthError | WWWAuthError {\n  return (\n    (isOAuthError(obj) || isWWWAuthError(obj)) &&\n    obj.errorCode === 'use_dpop_nonce'\n  );\n}\n\n/////////// crypto ///////////\n\nexport async function createJwt(header: object, claims: object, signingKey: CryptoKey): Promise<string> {\n  const head = stringToBase64Url(JSON.stringify(header));\n  const body = stringToBase64Url(JSON.stringify(claims));\n  const signature = await webcrypto.subtle.sign(\n    { name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`)\n  );\n  return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\n\nexport function cryptoRandomValue (byteLen = 32) {\n  return [...webcrypto.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\n\nexport async function generateKeyPair (): Promise<CryptoKeyPair> {\n  const algorithm = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: 'SHA-256',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n  };\n\n  // The \"false\" here makes it non-exportable\n  // https://caniuse.com/mdn-api_subtlecrypto_generatekey\n  return webcrypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\n\nasync function hashAccessToken (accessToken: string): Promise<string> {\n  const buffer = new TextEncoder().encode(accessToken);\n  const hash = await webcrypto.subtle.digest('SHA-256', buffer);\n\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hash) as unknown as number[]))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/////////// indexeddb / keystore ///////////\n\n\n// https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore#instance_methods\n// add additional methods as needed\nexport type StoreMethod = 'get' | 'add' | 'delete' | 'clear';\n\n// convenience abstraction for exposing IDBObjectStore instance\nfunction keyStore (): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n\n      req.onerror = function () {\n        reject(req.error!);\n      };\n\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n\n        tx.onerror = function () {\n          reject(tx.error!);\n        };\n\n        const store = tx.objectStore(DB_KEY);\n\n        resolve(store);\n\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    }\n    catch (err) {\n      reject(err);\n    }\n  });\n}\n\n// convenience abstraction for wrapping IDBObjectStore methods in promises\nasync function invokeStoreMethod (method: StoreMethod, ...args: any[]): Promise<IDBRequest> {\n  const store = await keyStore();\n  return new Promise((resolve, reject) => {\n    // https://github.com/microsoft/TypeScript/issues/49700\n    // https://github.com/microsoft/TypeScript/issues/49802\n    // @ts-expect-error ts(2556)\n    const req = store[method](...args);\n    req.onsuccess = function () {\n      resolve(req);\n    };\n    req.onerror = function () {\n      reject(req.error);\n    };\n  });\n}\n\nasync function storeKeyPair (pairId: string, keyPair: CryptoKeyPair) {\n  await invokeStoreMethod('add', keyPair, pairId);\n  return keyPair;\n}\n\n// attempts to find keyPair stored at given key, otherwise throws\nexport async function findKeyPair (pairId?: string): Promise<CryptoKeyPair> {\n  if (pairId) {\n    const req = await invokeStoreMethod('get', pairId);\n    if (req.result) {\n      return req.result;\n    }\n  }\n\n  // defaults to throwing unless keyPair is found\n  throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\n\nexport async function clearDPoPKeyPair (pairId: string): Promise<void> {\n  await invokeStoreMethod('delete', pairId);\n}\n\nexport async function clearAllDPoPKeyPairs (): Promise<void> {\n  await invokeStoreMethod('clear');\n}\n\n// generates a crypto (non-extractable) private key pair and writes it to indexeddb, returns key (id)\nexport async function createDPoPKeyPair (): Promise<{keyPair: CryptoKeyPair, keyPairId: string}> {\n  const keyPairId = cryptoRandomValue(4);\n  const keyPair = await generateKeyPair();\n  await storeKeyPair(keyPairId, keyPair);\n  return { keyPair, keyPairId };\n}\n\n// will clear PK from storage if certain token conditions are met\n/* eslint max-len: [2, 132], complexity: [2, 12] */\nexport async function clearDPoPKeyPairAfterRevoke (revokedToken: 'access' | 'refresh', tokens: Tokens): Promise<void> {\n  let shouldClear = false;\n\n  const { accessToken, refreshToken } = tokens;\n\n  // revoking access token and refresh token doesn't exist\n  if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n    shouldClear = true;\n  }\n\n  // revoking refresh token and access token doesn't exist\n  if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n    shouldClear = true;\n  }\n\n  const pairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n  if (shouldClear && pairId) {\n    await clearDPoPKeyPair(pairId);\n  }\n}\n\n/////////// proof generation methods ///////////\n\nexport async function generateDPoPProof ({ keyPair, url, method, nonce, accessToken }: DPoPProofParams): Promise<string> {\n  const { kty, crv, e, n, x, y } = await webcrypto.subtle.exportKey('jwk', keyPair.publicKey);\n  const header = {\n    alg: 'RS256',\n    typ: 'dpop+jwt',\n    jwk: { kty, crv, e, n, x, y }\n  };\n\n  const claims: DPoPClaims = {\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: cryptoRandomValue(),\n  };\n\n  if (nonce) {\n    claims.nonce = nonce;\n  }\n\n  // encode access token\n  if (accessToken) {\n    claims.ath = await hashAccessToken(accessToken);\n  }\n\n  return createJwt(header, claims, keyPair.privateKey);\n}\n\n/* eslint max-len: [2, 132] */\nexport async function generateDPoPForTokenRequest ({ keyPair, url, method, nonce }: DPoPProofTokenRequestParams): Promise<string> {\n  const params: DPoPProofParams = { keyPair, url, method };\n  if (nonce) {\n    params.nonce = nonce;\n  }\n\n  return generateDPoPProof(params);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, AuthApiError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest, OktaAuthHttpInterface } from '../../http';\nimport { generateDPoPForTokenRequest, isDPoPNonceError } from '../dpop';\n\nexport interface TokenEndpointParams extends TokenParams {\n  dpopKeyPair?: CryptoKeyPair;\n}\n\ninterface TokenRequestParams {\n  url: string;\n  data: any;\n  dpopKeyPair?: CryptoKeyPair;\n  nonce?: string;\n}\n\nfunction validateOptions(options: TokenEndpointParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n/* eslint complexity: [2, 10] */\nasync function makeTokenRequest (sdk, { url, data, nonce, dpopKeyPair }: TokenRequestParams): Promise<OAuthResponse> {\n  const method = 'POST';\n  const headers: any = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  if (sdk.options.dpop) {\n    if (!dpopKeyPair) {\n      throw new AuthSdkError('DPoP is configured but no key pair was provided');\n    }\n\n    const proof = await generateDPoPForTokenRequest({ url, method, nonce, keyPair: dpopKeyPair });\n    headers.DPoP = proof;\n  }\n\n  try {\n    const resp = await httpRequest(sdk, {\n      url,\n      method,\n      args: data,\n      headers\n    });\n    return resp;\n  }\n  catch (err) {\n    if (isDPoPNonceError(err) && !nonce) {\n      const dpopNonce = err.resp?.headers['dpop-nonce'];\n      if (!dpopNonce) {\n        // throws error is dpop-nonce header cannot be found, prevents infinite loop\n        throw new AuthApiError(\n          {errorSummary: 'No `dpop-nonce` header found when required'},\n          err.resp ?? undefined    // yay ts\n        );\n      }\n      return makeTokenRequest(sdk, { url, data, dpopKeyPair, nonce: dpopNonce });\n    }\n    throw err;\n  }\n}\n\n// exchange authorization code for an access token\nexport async function postToTokenEndpoint(sdk, options: TokenEndpointParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const params: TokenRequestParams = {\n    url: urls.tokenUrl!,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n\nexport async function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenEndpointParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  const data = Object.entries({\n    client_id: options.clientId, // eslint-disable-line camelcase\n    grant_type: 'refresh_token', // eslint-disable-line camelcase\n    scope: refreshToken.scopes.join(' '),\n    refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n  }).map(function ([name, value]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return name + '=' + encodeURIComponent(value!);\n  }).join('&');\n\n  let url = refreshToken.tokenUrl;\n  if (options.extraParams && Object.keys(options.extraParams).length >= 1) {\n    url += toQueryString(options.extraParams);\n  }\n\n  const params: TokenRequestParams = {\n    url,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOAuthInterface, WellKnownResponse } from '../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint, TokenEndpointParams } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { createDPoPKeyPair, findKeyPair } from './dpop';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport async function exchangeCodeForTokens(sdk: OktaAuthOAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state,\n    acrValues,\n    dpop,\n    dpopPairId,\n    extraParams\n  } = tokenParams;\n\n  // postToTokenEndpoint() params\n  const getTokenOptions: TokenEndpointParams = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    dpop,\n  };\n\n  // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n  // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n  // `responseType` is used to validate that the expected tokens were returned\n  const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n  if (scopes!.indexOf('openid') !== -1) {\n    responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n  }\n  // handleOAuthResponse() params\n  const handleResponseOptions: TokenParams = {\n    clientId,\n    redirectUri,\n    scopes,\n    responseType,\n    ignoreSignature,\n    acrValues,\n    extraParams\n  };\n\n  try {\n    if (dpop) {\n      // token refresh, KP should already exist\n      if (dpopPairId) {\n        const keyPair = await findKeyPair(dpopPairId);\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = dpopPairId;\n      }\n      else {\n        const { keyPair, keyPairId } = await createDPoPKeyPair();\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = keyPairId;\n      }\n    }\n\n    const oauthResponse: OAuthResponse = await postToTokenEndpoint(sdk, getTokenOptions, urls);\n\n    const tokenResponse: TokenResponse = await handleOAuthResponse(sdk, handleResponseOptions, oauthResponse, urls!);\n    tokenResponse.code = authorizationCode;\n    tokenResponse.state = state!;\n    return tokenResponse;\n  }\n  finally {\n    sdk.transactionManager.clear();\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { PromiseQueue } from '../../util';\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport { getUserInfo } from '../getUserInfo';\nimport { getWithoutPrompt } from '../getWithoutPrompt';\nimport { getWithPopup, getWithIDPPopup } from '../getWithPopup';\nimport { getWithRedirect } from '../getWithRedirect';\nimport { parseFromUrl } from '../parseFromUrl';\nimport { renewToken } from '../renewToken';\nimport { renewTokens } from '../renewTokens';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh';\nimport { revokeToken } from '../revokeToken';\nimport { oidcIntrospect } from '../introspect';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  GetWithRedirectFunction,\n  IDToken,\n  OktaAuthOAuthInterface,\n  ParseFromUrlInterface,\n  TokenAPI,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport { isLoginRedirect, prepareTokenParams } from '../util';\nimport { verifyToken } from '../verifyToken';\nimport { enrollAuthenticator } from '../enrollAuthenticator';\n\n// Factory\nexport function createTokenAPI(sdk: OktaAuthOAuthInterface, queue: PromiseQueue): TokenAPI {\n  const useQueue = (method) => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk)) as GetWithRedirectFunction;\n\n  // eslint-disable-next-line max-len\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk)) as ParseFromUrlInterface;\n  const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n    // This is exposed so we can mock getting window.history in our tests\n    _getHistory: function() {\n      return window.history;\n    },\n\n    // This is exposed so we can mock getting window.location in our tests\n    _getLocation: function() {\n      return window.location;\n    },\n\n    // This is exposed so we can mock getting window.document in our tests\n    _getDocument: function() {\n      return window.document;\n    }\n  });\n\n  const token: TokenAPI ={\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithIDPPopup: getWithIDPPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectFn,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n      accessTokenObject: AccessToken,\n      idTokenObject: IDToken\n    ): Promise<UserClaims<C>> => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk),\n    introspect: oidcIntrospect.bind(null, sdk),\n  };\n\n  // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n  // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n  const toWrap = [\n    'getWithoutPrompt',\n    'getWithPopup',\n    'revoke',\n    'renew',\n    'renewTokensWithRefresh',\n    'renewTokens'\n  ];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n\n  return token;\n}\n\nexport function createEndpoints(sdk: OktaAuthOAuthInterface): Endpoints {\n  return {\n    authorize: {\n      enrollAuthenticator: enrollAuthenticator.bind(null, sdk),\n    }\n  };\n}\n","import { StorageManagerConstructor } from '../../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../../base/types';\n\nimport { createOktaAuthBase } from '../../base';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinOAuth } from '../mixin';\nimport {\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../types';\n\nexport function createOktaAuthOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n):  OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\n","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener,\n  addIDPPopupLisenter\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from './types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType: 'IFRAME' | 'POPUP' | 'IDP_POPUP' | 'IMPLICIT' = 'IMPLICIT';\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      }\n      else if (tokenParams.display === 'popup') {\n        flowType = options.idpPopup ? 'IDP_POPUP' : 'POPUP';\n      }\n      else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindow can be null when popup is blocked\n          if (popupWindow) {\n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        case 'IDP_POPUP':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          var idpPromise = addIDPPopupLisenter(sdk, options.timeout, options.channel!, tokenParams.state!);\n\n          // Redirect for authorization\n          // popupWindow can be null when popup is blocked\n          if (popupWindow) {\n            popupWindow.location.assign(requestUrl);\n          }\n          else {\n            throw new AuthSdkError('Unable to open popup window');\n          }\n\n          return idpPromise\n          .then(function (res) {\n            return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n          });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError, OAuthError, WWWAuthError, AuthApiError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from './types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  const options: any = {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  };\n\n  if (sdk.options.dpop) {\n    const headers = await sdk.getDPoPAuthorizationHeaders({...options, accessToken: accessTokenObject });\n    options.headers = headers;\n    delete options.accessToken;      // unset to prevent overriding Auth header with Bearer Token\n  }\n\n  return httpRequest(sdk, options)\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (err instanceof WWWAuthError && !sdk.options.dpop) {\n        const { error, errorDescription } = err;\n        throw new OAuthError(error, errorDescription);\n      }\n\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (!sdk.options.dpop) {\n        let e = err;\n        if (err instanceof AuthApiError && err?.meta?.wwwAuthHeader) {\n          e = WWWAuthError.parseHeader(err.meta.wwwAuthHeader as string);\n        }\n\n        if (e instanceof WWWAuthError) {\n          const { error, errorDescription } = e;\n          throw new OAuthError(error, errorDescription);\n        }\n      }\n\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup, generateState } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n\nexport function getWithIDPPopup(\n  sdk: OktaAuthOAuthInterface,\n  options: Omit<TokenParams, 'redirectUri'> & { redirectUri: string }\n): { cancel: () => void, promise: Promise<TokenResponse> } {\n try {\n   // eslint-disable-next-line compat/compat\n   if (!BroadcastChannel) {\n    throw new AuthSdkError('Modern browser with `BroadcastChannel` support is required to use this method');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('`redirectUri` is a required param for `getWithIDPPopup`');\n  }\n\n  if (!options.state) {\n    options.state = generateState();\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  // eslint-disable-next-line compat/compat\n  const channel = new BroadcastChannel(`popup-callback:${options.state}`);\n\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'query',\n    popupWindow,\n    idpPopup: true,\n    channel,\n  });\n\n  let cancelPromise;\n  const promise = new Promise<TokenResponse>((resolve, reject) => {\n    cancelPromise = reject;\n    return getToken(sdk, options)\n    .then((res) => resolve(res))\n    .catch(err => reject(err));\n  });\n\n  const cancel = () => {\n    channel.close();\n    cancelPromise(new AuthSdkError('Popup flow canceled'));\n  };\n\n  return {\n    promise,\n    cancel\n  };\n }\n catch (err) {\n  return {\n    promise: Promise.reject(err),\n    cancel: () => {}    // noop, no need to for method when error is thrown\n  };\n }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from './types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  const pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  let responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType) && responseType !== 'none') {\n    responseType = [responseType];\n  }\n\n  let scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  const clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  if (tokenParams.dpop) {\n    const { allowBearerTokens } = sdk.options?.dpopOptions ?? { allowBearerTokens: false };\n\n    // https://datatracker.ietf.org/doc/html/rfc9449#token-response\n    // \"A token_type of DPoP MUST be included in the access token response to signal to the client\"\n    if (!allowBearerTokens && res.token_type !== 'DPoP') {\n      throw new AuthSdkError('Unable to parse OAuth flow response: DPoP was configured but \"token_type\" was not DPoP');\n    }\n  }\n\n  const tokenDict = {} as Tokens;\n  const expiresIn = res.expires_in;\n  const tokenType = res.token_type;\n  const accessToken = res.access_token;\n  const idToken = res.id_token;\n  const refreshToken = res.refresh_token;\n  const now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    const accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.accessToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.accessToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.refreshToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.refreshToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (idToken) {\n    const idJwt = sdk.token.decode(idToken);\n    const idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    if (tokenParams.extraParams) {\n      idTokenObj.extraParams = tokenParams.extraParams;\n    }\n\n    const validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken,\n      acrValues: tokenParams.acrValues\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code,\n    responseType\n  };\n  \n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AuthSdkError } from '../errors';\nimport { getWellKnown } from './endpoints/well-known';\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport { btoa } from '../crypto';\nimport { Token, TokenKind } from './types';\n\nconst hintMap = {\n  accessToken: 'access_token',\n  idToken: 'id_token',\n  refreshToken: 'refresh_token'\n};\n\n/* eslint complexity: [2, 9] */\nexport async function oidcIntrospect (sdk, kind: TokenKind, token?: Token) {\n  let issuer: string;\n  let clientId: string = sdk.options.clientId;\n  let clientSecret: string | undefined = sdk.options.clientSecret;\n\n  if (!token) {\n    token = sdk.tokenManager.getTokens()[kind];\n  }\n\n  if (!token) {\n    throw new AuthSdkError(`unable to find ${kind} in storage or fn params`);\n  }\n\n  if (kind !== TokenKind.ACCESS) {\n    issuer = (token as any)?.issuer;\n  }\n  else {\n    issuer = (token as any)?.claims?.iss;\n  }\n  issuer = issuer || sdk.options.issuer;\n\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to introspect a token');\n  }\n  if (!issuer) {\n    throw new AuthSdkError('Unable to find issuer');\n  }\n\n  const { introspection_endpoint: introspectUrl }  = await getWellKnown(sdk, issuer);\n  const authHeader = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  const args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: hintMap[kind],\n    token: token[kind]    // extract raw token string from token object\n  }).slice(1);\n  return post(sdk, introspectUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + authHeader\n    }\n  });\n}\n","import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n  isFunction\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n  DPoPRequest,\n  DPoPHeaders\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory/api';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect, hasResponseType } from '../util';\nimport { \n  generateDPoPProof,\n  clearDPoPKeyPair,\n  clearAllDPoPKeyPairs,\n  clearDPoPKeyPairAfterRevoke,\n  findKeyPair,\n  isDPoPNonceError\n} from '../dpop';\nimport { AuthSdkError, WWWAuthError } from '../../errors';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n\n    async getOrRenewAccessToken(): Promise<string | null> {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && !this.tokenManager.hasExpired(accessToken)) {\n        return accessToken.accessToken;\n      }\n      try {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        const token = await this.tokenManager.renew(key ?? 'accessToken');\n        return (token as AccessToken)?.accessToken ?? null;\n      }\n      catch (err) {\n        this.emitter.emit('error', err);\n        return null;\n      }\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        const tokens = await this.tokenManager.getTokens();\n        accessToken = tokens.accessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('access', tokens);\n        }\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        const tokens = await this.tokenManager.getTokens();\n        refreshToken = tokens.refreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('refresh', tokens);\n        }\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const dpopPairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n      if (this.options.dpop && dpopPairId) {\n        await clearDPoPKeyPair(dpopPairId);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n    async getDPoPAuthorizationHeaders (params: DPoPRequest): Promise<DPoPHeaders> {\n      if (!this.options.dpop) {\n        throw new AuthSdkError('DPoP is not configured for this client instance');\n      }\n\n      let { accessToken } = params;\n      if (!accessToken) {\n        accessToken = (this.tokenManager.getTokensSync()).accessToken;\n      }\n\n      if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to generate a DPoP Proof');\n      }\n\n      const keyPair = await findKeyPair(accessToken?.dpopPairId);\n      const proof = await generateDPoPProof({...params, keyPair, accessToken: accessToken.accessToken});\n      return {\n        Authorization: `DPoP ${accessToken.accessToken}`,\n        Dpop: proof\n      };\n    }\n\n    async clearDPoPStorage (clearAll=false): Promise<void> {\n      if (clearAll) {\n        return clearAllDPoPKeyPairs();\n      }\n\n      const tokens = await this.tokenManager.getTokens();\n      const keyPair = tokens.accessToken?.dpopPairId || tokens.refreshToken?.dpopPairId;\n\n      if (keyPair) {\n        await clearDPoPKeyPair(keyPair);\n      }\n    }\n\n    parseUseDPoPNonceError (headers: HeadersInit): string | null {\n      const wwwAuth = WWWAuthError.getWWWAuthenticateHeader(headers);\n      const wwwErr = WWWAuthError.parseHeader(wwwAuth ?? '');\n      if (isDPoPNonceError(wwwErr)) {\n        let nonce: string | null = null;\n        if (isFunction((headers as Headers)?.get)) {\n          nonce = (headers as Headers).get('DPoP-Nonce');\n        }\n        nonce = nonce ?? headers['dpop-nonce'] ?? headers['DPoP-Nonce'];\n        return nonce;\n      }\n\n      return null;\n    }\n  };\n\n}\n","import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n","export const enableSharedStorage = true;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DEFAULT_MAX_CLOCK_SKEW } from '../../constants';\nimport { removeTrailingSlash, toAbsoluteUrl } from '../../util/url';\nimport { isBrowser } from '../../features';\nimport { createHttpOptionsConstructor } from '../../http/options';\nimport {\n  OAuthResponseMode,\n  OAuthResponseType,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  SetLocationFunction,\n  TokenManagerOptions,\n  TransactionManagerOptions,\n  DPoPOptions\n} from '../types';\nimport { enableSharedStorage } from './node';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nfunction assertValidConfig(args) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.okta') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport function createOAuthOptionsConstructor() {\n  const HttpOptionsConstructor = createHttpOptionsConstructor();\n  return class OAuthOptionsConstructor\n    extends HttpOptionsConstructor\n    implements Required<OktaAuthOAuthOptions>\n  {\n    // CustomUrls\n    issuer: string;\n    authorizeUrl: string;\n    userinfoUrl: string;\n    tokenUrl: string;\n    revokeUrl: string;\n    logoutUrl: string;\n    \n    // TokenParams\n    pkce: boolean;\n    clientId: string;\n    redirectUri: string;\n    responseType: OAuthResponseType | OAuthResponseType[];\n    responseMode: OAuthResponseMode;\n    state: string;\n    scopes: string[];\n    ignoreSignature: boolean;\n    codeChallenge: string;\n    codeChallengeMethod: string;\n    acrValues: string;\n    maxAge: string | number;\n    dpop: boolean;\n    dpopOptions: DPoPOptions;\n\n    // Additional options\n    tokenManager: TokenManagerOptions;\n    postLogoutRedirectUri: string;\n    restoreOriginalUri: (oktaAuth: OktaAuthOAuthInterface, originalUri?: string) => Promise<void>;\n    transactionManager: TransactionManagerOptions;\n\n    // For server-side web applications ONLY!\n    clientSecret: string;\n    setLocation: SetLocationFunction;\n\n    // Workaround for bad client time/clock\n    ignoreLifetime: boolean;\n    maxClockSkew: number;\n\n\n    // eslint-disable-next-line max-statements\n    constructor(options: any) {\n      super(options);\n      \n      assertValidConfig(options);\n      \n      this.issuer = removeTrailingSlash(options.issuer);\n      this.tokenUrl = removeTrailingSlash(options.tokenUrl);\n      this.authorizeUrl = removeTrailingSlash(options.authorizeUrl);\n      this.userinfoUrl = removeTrailingSlash(options.userinfoUrl);\n      this.revokeUrl = removeTrailingSlash(options.revokeUrl);\n      this.logoutUrl = removeTrailingSlash(options.logoutUrl);\n\n      this.pkce = options.pkce === false ? false : true; // PKCE defaults to true\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      if (isBrowser()) {\n        this.redirectUri = toAbsoluteUrl(options.redirectUri, window.location.origin); // allow relative URIs\n      }\n      this.responseType = options.responseType;\n      this.responseMode = options.responseMode;\n      this.state = options.state;\n      this.scopes = options.scopes;\n      // Give the developer the ability to disable token signature validation.\n      this.ignoreSignature = !!options.ignoreSignature;\n      this.codeChallenge = options.codeChallenge;\n      this.codeChallengeMethod = options.codeChallengeMethod;\n      this.acrValues = options.acrValues;\n      this.maxAge = options.maxAge;\n      this.dpop = options.dpop === true; // dpop defaults to false\n      this.dpopOptions = {\n        allowBearerTokens: false,\n        ...options.dpopOptions,\n      };\n\n      this.tokenManager = options.tokenManager;\n      this.postLogoutRedirectUri = options.postLogoutRedirectUri;\n      this.restoreOriginalUri = options.restoreOriginalUri;\n      this.transactionManager = { enableSharedStorage, ...options.transactionManager };\n      \n      this.clientSecret = options.clientSecret;\n      this.setLocation = options.setLocation;\n      \n      // As some end user's devices can have their date \n      // and time incorrectly set, allow for the disabling\n      // of the jwt liftetime validation\n      this.ignoreLifetime = !!options.ignoreLifetime;\n\n      // Digital clocks will drift over time, so the server\n      // can misalign with the time reported by the browser.\n      // The maxClockSkew allows relaxing the time-based\n      // validation of tokens (in seconds, not milliseconds).\n      // It currently defaults to 300, because 5 min is the\n      // default maximum tolerance allowed by Kerberos.\n      // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n      if (!options.maxClockSkew && options.maxClockSkew !== 0) {\n        this.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n      } else {\n        this.maxClockSkew = options.maxClockSkew;\n      }\n\n    }\n  };\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer, dpopPairId, extraParams } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n  const dpopPairId = accessToken?.dpopPairId;\n  const extraParams = accessToken?.extraParams || idToken?.extraParams;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOAuthInterface, TokenParams, RefreshToken, Tokens } from './types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { TokenEndpointParams, postRefreshToken } from './endpoints/token';\nimport { findKeyPair } from './dpop';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\n/* eslint complexity:[0,8] */\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId, dpop } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, { clientId });\n\n    if (refreshTokenObject.extraParams) {\n      renewTokenParams.extraParams = refreshTokenObject.extraParams;\n    }\n\n    const endpointParams: TokenEndpointParams = {...renewTokenParams};\n\n    if (dpop) {\n      const keyPair = await findKeyPair(refreshTokenObject?.dpopPairId);    // will throw if KP cannot be found\n      endpointParams.dpopKeyPair = keyPair;\n      renewTokenParams.dpop = dpop;\n      renewTokenParams.dpopPairId = refreshTokenObject.dpopPairId;\n    }\n\n    const tokenResponse = await postRefreshToken(sdk, endpointParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n  extraParams?: Record<string, string>;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n  dpopPairId?: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n  dpopPairId?: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable max-len */\nimport { StorageProvider } from '../../storage/types';\nimport { TokenManagerOptions } from './options';\nimport { AccessToken, IDToken, RefreshToken, Token, Tokens, TokenType } from './Token';\n\nexport interface TokenManagerError {\n  errorSummary: string;\n  errorCode: string;\n  message: string;\n  name: string;\n  tokenKey: string;\n}\n\nexport declare type AccessTokenCallback = (key: string, token: AccessToken) => void;\nexport declare type IDTokenCallback = (key: string, token: IDToken) => void;\nexport declare type RefreshTokenCallback = (key: string, token: RefreshToken) => void;\n\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_SET_STORAGE = 'set_storage';\n\nexport declare type TokenManagerErrorEventHandler = (error: TokenManagerError) => void;\nexport declare type TokenManagerEventHandler = (key: string, token: Token) => void;\nexport declare type TokenManagerRenewEventHandler = (key: string, token: Token, oldtoken: Token) => void;\nexport declare type TokenManagerSetStorageEventHandler = (storage: Tokens) => void;\n\nexport declare type TokenManagerAnyEventHandler = TokenManagerErrorEventHandler | TokenManagerRenewEventHandler | TokenManagerSetStorageEventHandler | TokenManagerEventHandler;\nexport declare type TokenManagerAnyEvent = typeof EVENT_RENEWED | typeof EVENT_ERROR | typeof EVENT_SET_STORAGE | typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED;\n\n// only add methods needed internally\nexport interface TokenManagerInterface {\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler: TokenManagerEventHandler, context?: object): void;\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler?: TokenManagerEventHandler): void;\n\n  clear(): void;\n  setExpireEventTimeout(key: string, token: Token): void;\n  clearExpireEventTimeout(key: string): void;\n  clearExpireEventTimeoutAll(): void;\n  emitAdded(key: string, token: Token): void;\n  emitError(error: Error): void;\n  emitRemoved(key: string, token: Token): void;\n  emitRenewed(key: string, token: Token, oldToken?: Token): void;\n  renew(key: string): Promise<Token | undefined>;\n  remove(key: string): void;\n  hasExpired(token: Token): boolean;\n  getExpireTime(token: Token): number;\n\n  get(key): Promise<Token | undefined>;\n  getSync(key): Token | undefined;\n  getTokens(): Promise<Tokens>;\n  getTokensSync(): Tokens;\n  setTokens({ accessToken, idToken, refreshToken }: Tokens, accessTokenCb?: AccessTokenCallback, idTokenCb?: IDTokenCallback, refreshTokenCb?: RefreshTokenCallback): void;\n  getStorageKeyByType(type: TokenType): string;\n  add(key: any, token: Token): void;\n  updateRefreshToken(token: RefreshToken);\n  removeRefreshToken(): void;\n  clearPendingRemoveTokens(): void;\n\n  getOptions(): TokenManagerOptions;\n  getStorage(): StorageProvider;\n\n  start();\n  stop();\n  isStarted(): boolean;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxTransactionMeta } from '../../idx/types/meta';\nimport { OAuthTransactionMeta, PKCETransactionMeta } from './meta';\nimport { OAuthStorageManagerInterface } from './storage';\n\nexport interface TransactionManagerOptions\n{\n  storageManager?: OAuthStorageManagerInterface;\n  enableSharedStorage?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface } from '../types';\n\nconst DEFAULT_TIMEOUT = 120000;\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || DEFAULT_TIMEOUT);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n\nexport function addIDPPopupLisenter (\n  sdk: OktaAuthOAuthInterface,\n  timeout: number | undefined,\n  channel: BroadcastChannel,\n  state: string\n) {\n  let timeoutId;\n\n  const promise = new Promise((resolve, reject) => {\n    channel.onmessage = (event) => {\n      // ignore invalid or untrusted events\n      if (!event.isTrusted || !event.data) {\n        return;\n      }\n\n      if (typeof event.data === 'object' && state === event.data.state) {\n        return resolve({ ...event.data });\n      }\n\n      reject(new AuthSdkError('Unable to complete auth code exchange'));\n    };\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || DEFAULT_TIMEOUT);\n  });\n\n  return promise\n  .finally(() => {\n    clearTimeout(timeoutId);\n    channel.close();\n  });\n}\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultEnrollAuthenticatorParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state,\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n  });\n}","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    acrValues,\n    maxAge,\n    state,\n    ignoreSignature,\n    dpop\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    acrValues,\n    maxAge,\n    ignoreSignature,\n    dpop,\n  });\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createEnrollAuthenticatorMeta(\n  sdk: OktaAuthOAuthInterface, \n  params: EnrollAuthenticatorOptions\n): OAuthTransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId!,\n    redirectUri: params.redirectUri!,\n    responseType: params.responseType!,\n    responseMode: params.responseMode!,\n    state: params.state!,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues,\n  };\n\n  return oauthMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOAuthInterface } from '../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOAuthOptions, OktaAuthOAuthInterface, OAuthResponseType } from '../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function hasResponseType(responseType: OAuthResponseType, options: OktaAuthOAuthOptions): boolean {\n  let hasResponseType = false;\n  if (Array.isArray(options.responseType) && options.responseType.length) {\n    hasResponseType = options.responseType.indexOf(responseType) >= 0;\n  } else {\n    hasResponseType = options.responseType === responseType;\n  }\n  return hasResponseType;\n}\n\nexport function getHashOrSearch(options: OktaAuthOAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, PKCETransactionMeta, TokenParams } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n    acrValues: tokenParams.acrValues,\n    extraParams: tokenParams.extraParams\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\nimport { OktaAuthBaseInterface } from '../../base/types';\n\nexport function assertPKCESupport(sdk: OktaAuthBaseInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.dpop && !sdk.features.isDPoPSupported()) {\n    throw new AuthSdkError('DPoP has been configured, but is not supported by browser');\n  }\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, TokenVerifyParams, UserClaims } from '../../oidc/types';\n\nexport function validateClaims(sdk: OktaAuthOAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  const aud = validationParams.clientId;\n  const iss = validationParams.issuer;\n  const nonce = validationParams.nonce;\n  const acr = validationParams.acrValues;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  const now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if ((Array.isArray(claims.aud) && claims.aud.indexOf(aud) < 0) ||\n    (!Array.isArray(claims.aud) && claims.aud !== aud))\n  {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (acr && claims.acr !== acr) {\n    throw new AuthSdkError('The acr [' + claims.acr + '] ' +\n      'does not match acr_values [' + acr + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOAuthInterface, TokenVerifyParams } from '../oidc/types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  const jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  const validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from '../util';\nimport { get, post, httpRequest } from '../http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","import { SessionAPI } from './types';\nimport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from './api';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function createSessionApi(sdk: OktaAuthBaseInterface): SessionAPI {\n  const session = {\n    close: closeSession.bind(null, sdk),\n    exists: sessionExists.bind(null, sdk),\n    get: getSession.bind(null, sdk),\n    refresh: refreshSession.bind(null, sdk),\n    setCookieAndRedirect: setCookieAndRedirect.bind(null, sdk)\n  };\n  return session;\n}\n","import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","import { OktaAuthBaseInterface, OktaAuthConstructor } from '../base/types';\nimport {\n  OktaAuthStorageInterface,\n  OktaAuthStorageOptions,\n  StorageManagerConstructor,\n  StorageManagerInterface,\n} from './types';\n\nexport function mixinStorage\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthStorageOptions = OktaAuthStorageOptions,\n  TBase extends OktaAuthConstructor<OktaAuthBaseInterface<O>> = OktaAuthConstructor<OktaAuthBaseInterface<O>>\n>\n(\n  Base: TBase, StorageManager: StorageManagerConstructor<S>\n): TBase & OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n{\n  return class OktaAuthStorage extends Base implements OktaAuthStorageInterface<S, O>\n  {\n    storageManager: S;\n    constructor(...args: any[]) {\n      super(...args);\n      const { storageManager, cookies, storageUtil } = this.options;\n      this.storageManager = new StorageManager(storageManager!, cookies!, storageUtil!);\n    }\n    clearStorage(): void {\n      // override in subclass\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, StorageUtil, OktaAuthStorageOptions } from '../types';\nimport { warn } from '../../util';\n\nimport { default as browserStorage } from '../../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport function getCookieSettings(args: OktaAuthStorageOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createBaseOptionsConstructor } from '../../base';\nimport { CookieOptions, OktaAuthStorageOptions, StorageManagerOptions, StorageUtil } from '../types';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, getCookieSettings } from './node';\nimport { isHTTPS } from '../../features';\n\nexport function createStorageOptionsConstructor() {\n\n  const BaseOptionsConstructor = createBaseOptionsConstructor();\n  return class StorageOptionsConstructor extends BaseOptionsConstructor implements Required<OktaAuthStorageOptions> {\n    cookies: CookieOptions;\n    storageUtil: StorageUtil;\n    storageManager: StorageManagerOptions;\n    \n    constructor(args: any) {\n      super(args);\n      this.cookies = getCookieSettings(args, isHTTPS())!;\n      this.storageUtil = args.storageUtil || getStorage();\n      this.storageManager = { ...STORAGE_MANAGER_OPTIONS, ...args.storageManager };\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function split2(str, delim) {\n  const parts = str.split(delim);\n  return [\n    parts[0], \n    parts.splice(1, parts.length).join(delim),\n  ];\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(t) {\n  return module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _getPrototypeOf(t);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports)();\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(t, e) {\n  return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _setPrototypeOf(t, e);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeFunction = require(\"./isNativeFunction.js\");\nvar construct = require(\"./construct.js\");\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return module.exports = _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _wrapNativeSuper(t);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import superPropBase from \"./superPropBase.js\";\nfunction _get() {\n  return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, _get.apply(null, arguments);\n}\nexport { _get as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););\n  return t;\n}\nexport { _superPropBase as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  OktaAuthOptionsConstructor,\n} from '../base';\n\nimport {\n  IdxStorageManagerConstructor,\n  IdxTransactionManagerConstructor,\n  OktaAuthIdxOptions,\n  createIdxTransactionManager,\n  createOktaAuthIdx,\n  createIdxStorageManager,\n  createIdxOptionsConstructor\n} from '../idx';\n\nimport { mixinMyAccount } from '../myaccount';\nimport { mixinAuthn } from '../authn';\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OktaAuthOptions extends OktaAuthIdxOptions {}\n\nconst OptionsConstructor: OktaAuthOptionsConstructor<OktaAuthOptions> = createIdxOptionsConstructor();\nconst StorageManager: IdxStorageManagerConstructor = createIdxStorageManager();\nconst TransactionManager: IdxTransactionManagerConstructor = createIdxTransactionManager();\n\n// Default bundle includes everything\nconst WithIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\nconst WithMyAccount = mixinMyAccount(WithIdx);\nconst WithAuthn = mixinAuthn(WithMyAccount);\n\nclass OktaAuth extends WithAuthn {\n  constructor(options: OktaAuthOptions) {\n    super(options);\n  }\n}\n\nexport default OktaAuth;\nexport { OktaAuth };\nexport * from './common';\nexport * from '../idx';\nexport * from '../myaccount';\nexport * from '../authn';\n"],"names":["root","factory","exports","module","define","amd","self","addStateToken","res","options","builtArgs","Object","assign","stateToken","transactionStatus","sdk","args","post","getIssuerOrigin","withCredentials","transactionExists","getSavedStateToken","postToTransaction","tx","url","then","createTransaction","storageUtil","storage","get","STATE_TOKEN_KEY_NAME","link2fn","obj","link","ref","Array","isArray","name","opts","AuthSdkError","lk","find","hints","allow","length","href","isPolling","data","status","factorType","provider","params","autoPush","undefined","e","Promise","reject","omit","rememberDevice","profile","updatePhone","toQueryString","getPollFn","delay","transactionCallBack","isNumber","isObject","DEFAULT_POLLING_DELAY","pollLink","getLink","retryCount","recursivePoll","getStateToken","saveAuthnState","pollingIntent","pollFn","pollRes","factorResult","AuthPollStopError","delayFn","catch","err","xhr","delayLength","Math","pow","flattenEmbedded","clone","objArr","o","ol","push","embedded","_embedded","key","prototype","hasOwnProperty","call","fns","linkName","_links","type","poll","fn","links2fns","AuthnTransactionImpl","this","cancel","resolve","createAuthnTransactionAPI","bind","resume","resumeTransaction","exists","introspect","transactionStep","introspectAuthn","mixinAuthn","Base","authn","fingerprint","_postToTransaction","sendFingerprint","headers","signIn","createOktaAuthBase","OptionsConstructor","OktaAuthBase","removeNils","emitter","Emitter","features","constants","createBaseOptionsConstructor","devMode","target","i","arguments","source","api","init","converter","defaultAttributes","set","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","cookies","jar","parts","slice","join","foundKey","read","remove","withAttributes","withConverter","freeze","path","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","warn","isIE11OrLess","window","onstorage","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","expiresAt","removeItem","delete","useSeparateCookies","keys","forEach","k","indexOf","JSON","parse","stringify","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","Cookies","isMessageFromCorrectSource","iframe","event","contentWindow","isFingerprintSupported","timeout","listener","container","body","createElement","style","display","origin","msg","postMessage","addListener","src","appendChild","setTimeout","finally","clearTimeout","removeListener","contains","parentElement","removeChild","IOS_MAX_RETRY_COUNT","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","PromiseQueue","quiet","tokenManager","on","EVENT_ADDED","token","_setLogOptions","updateAuthState","EVENT_REMOVED","transformAuthState","log","getConsole","group","groupEnd","emitAuthStateChange","authState","prevState","state","isAuthenticated","idToken","accessToken","error","emit","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","getTokensSync","refreshToken","handler","off","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","randomToken","random","toString","substring","lastMs","microSeconds","ret","NativeMethod","channelName","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msgEvent","close","channelState","onMessage","messageJson","canBeUsed","globalThis","Deno","_pubkey","Error","averageResponseTime","ObliviousSet","ttl","map","Map","_to","constructor","has","add","obliviousSet","olderThen","iterator","Symbol","next","removeTooOldValues","clear","originalOptions","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","commit","_readLoop","closed","readNewMessages","db","lastCursorId","transaction","objectStore","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","onerror","onsuccess","result","openCursorRequest","openCursor","ev","cursor","id","getMessagesHigherThan","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","IndexedDBMethod","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","oncomplete","writeMessage","floor","msgObk","tooOld","ids","all","deleteRequest","removeMessagesById","cleanOldMessages","ls","LocalstorageMethod","newValue","addEventListener","addStorageEventListener","removeEventListener","writeObj","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","from","channel","METHODS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","method","chooseMethods","concat","Boolean","m","useMethod","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","s","_state","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","_this","awaitPrepare","isClosed","USE_METHOD","process","exit","console","trace","WorkerGlobalScope","oldClose","LISTENERS","startedListening","runAll","promises","sendLeaderMessage","leaderElector","action","msgJson","context","beLeader","isLeader","_hasLeader","unloadFn","run","die","_unl","isLeaderListener","_dpLC","_dpL","_lstns","LeaderElectionWebLock","_options","isDead","_wKMC","lN","hasLeader","_this2","locks","query","relevantLocks","held","lock","awaitLeadership","_this3","_wLMP","c","AbortController","returnPromise","request","signal","onduplicate","_fn","_this4","uFn","abort","LeaderElection","_aplQ","_aplQC","hasLeaderListener","createLeaderElection","_leaderElector","responseTime","elector","applyOnce","isFromFallbackInterval","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","_aLP","resolved","finish","whenDeathListener","_tryOnFallBack","LeaderElectionService","onLeaderDuplicate","onLeader","canStart","electionChannelName","started","isBrowser","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","syncStorage","tokens","getStorage","isRefreshToken","hasExpired","autoRenew","shouldThrottleRenew","emitError","renew","autoRemove","EVENT_EXPIRED","isStarted","processExpiredTokens","SyncStorageService","onTokenAddedHandler","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","syncChannelName","EVENT_RENEWED","EVENT_SET_STORAGE","enablePostMessage","oldToken","setStorage","emitAdded","setExpireEventTimeout","clearExpireEventTimeout","emitRemoved","emitRenewed","getNow","RenewOnTabActivationService","onPageVisbilityChange","_onPageVisbilityChange","hidden","lastHidden","tabInactivityDuration","getStorageKeyByType","renewOnTabActivation","AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","RENEW_ON_TAB_ACTIVATION","ServiceManager","getOptions","broadcastChannelName","defaultOptions","clientId","services","knownServices","svc","createService","startServices","getService","values","some","srv","requiresLeadership","stopServices","entries","canStartService","start","stop","isLeaderRequired","service","createOktaAuthCore","StorageManagerConstructor","TransactionManagerConstructor","WithStorage","mixinStorage","WithHttp","mixinHttp","WithSession","mixinSession","WithOAuth","mixinOAuth","mixinCore","authStateManager","serviceManager","isLoginRedirect","originalUri","handleLoginRedirect","setTokens","getOriginalUri","parseOAuthResponseFromUrl","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","restoreOriginalUri","location","responseMode","createCoreOptionsConstructor","createOAuthOptionsConstructor","createCoreStorageManager","createOAuthStorageManager","stringToBase64Url","str","base64ToBase64Url","btoa","b64","base64UrlToBase64","b64u","base64UrlToString","utf8","atob","stringToBuffer","buffer","Uint8Array","charCodeAt","base64UrlDecode","base64UrlToBuffer","bufferToBase64Url","bin","reduce","byte","String","fromCharCode","a","b","crypto","getOidcHash","TextEncoder","encode","webcrypto","arrayBuffer","firstHalf","hash","apply","verifyToken","algo","use","cryptoKey","jwt","payload","b64Signature","signature","AuthApiError","meta","errorSummary","errorCode","errorLink","errorId","errorCauses","CustomError","_isNativeReflectConstruct","t","valueOf","Reflect","construct","_wrapNativeSuper","r","Function","n","TypeError","Wrapper","p","setPrototypeOf","getPrototypeOf","enumerable","writable","configurable","OAuthError","summary","resp","error_description","WWWAuthError","scheme","parameters","UNKNOWN_ERROR","errorDescription","realm","header","match","regex","firstSpace","remaining","exec","isFunction","isAuthApiError","isOAuthError","isWWWAuthError","isWindowsPhone","documentMode","getUserAgent","agent","test","isPopupPostMessageSupported","isIE8or9","isWebCryptoSubtleSupported","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","isDPoPSupported","isIOS","MSStream","OktaUserAgent","environments","SDK_VERSION","maybeAddNodeEnvironment","env","versions","version","setRequestHeader","authClient","headerName","headerValue","_oktaUserAgent","http","issuer","appJsonContentTypeRegex","contentType","param","fetchPromise","global","fetch","crossFetch","credentials","response","ok","json","text","readData","pair","responseText","responseType","responseJSON","formatResult","createHttpOptionsConstructor","transformErrorXHR","httpRequestClient","fetchRequest","httpRequestInterceptors","pollDelay","createStorageOptionsConstructor","trackDateDocumentBecameVisible","dateDocumentBecameVisible","formatError","serverErr","isString","wwwAuthHeader","wwwAuthErr","max_age","acr_values","httpRequest","interceptor","httpCache","storageManager","getHttpCache","cacheResponse","cachedResponse","getHttpHeader","promise","ajaxOptions","waitForVisibleAndAwakenDocument","waitForAwakenDocument","recursiveFetch","timeSinceDocumentIsVisible","pageVisibilityHandler","retryableFetch","item","updateStorage","isAbsoluteUrl","postOptions","createIdxTransactionManager","clearIdxResponse","saveLastResponse","getIdxResponseStorage","storedValue","isRawIdxResponse","rawIdxResponse","stateHandle","interactionHandle","useGenericRemediator","clearStorage","createTransactionManager","authenticate","password","authenticator","AuthenticatorKey","flow","Authenticator","OktaPassword","passcode","revokeSessions","idxRemediationValue","inputs","form","required","input","label","formatAuthenticator","incoming","isAuthenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","transactionManager","load","flowSpec","getFlowSpecification","actions","EmailVerifyCallbackError","otp","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","urlParamsToObject","handleEmailVerifyCallback","search","idx","canProceed","proceed","createOktaAuthIdx","Core","mixinIdx","createIdxAPI","setRemediatorsCtx","remediators","boundStartTransaction","startTransaction","interact","makeIdxResponse","makeIdxState","register","recoverPassword","handleInteractionCodeRedirect","isInteractionRequired","isInteractionRequiredError","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","setFlow","getFlow","unlockAccount","AuthenticationFlow","Identify","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","AuthenticatorEnrollmentData","AuthenticatorVerificationData","EnrollAuthenticator","ChallengeAuthenticator","ChallengePoll","ReEnrollAuthenticator","ReEnrollAuthenticatorWarning","EnrollPoll","SelectEnrollmentChannel","EnrollmentChannelData","RedirectIdp","Skip","PasswordRecoveryFlow","ResetAuthenticator","RegistrationFlow","SelectEnrollProfile","EnrollProfile","AccountUnlockFlow","SelectAuthenticatorUnlockAccount","oktaAuth","codeVerifier","savedState","URL","searchParams","interactionCode","exchangeCodeForTokens","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","generateDirectFetch","actionDefinition","toPersist","accepts","endsWith","idxResponse","stepUp","generator","actionList","neededParams","defaultParams","immutableParams","divideActionParamsByMutability","jsonpathRegex","SKIP_FIELDS","expandRelatesTo","steps","step","groups","index","lastStep","pop","curr","jsonpath","innerValue","parseIdxResponse","remediationData","remediation","authenticatorChallenge","remediations","rel","remediationActions","remediationValue","generateIdxAction","generateRemediationFunctions","actionFn","convertRemediationAction","fieldValue","info","subField","parseNonRemediations","requestDidSucceed","neededToProceed","remediationChoice","paramsFromUser","remediationChoiceObject","rawIdxState","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","mixinMinimalIdx","webauthn","mixinMinimalOAuth","prepareTokenParams","decode","decodeToken","pkce","hasResponseType","createMinimalOktaAuthIdx","getResponse","baseUrl","getOAuthBaseUrl","redirectUri","scopes","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","acrValues","nonce","clientSecret","client_id","scope","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","newMeta","savedIdxResponse","loadIdxResponse","domain","getOAuthDomain","Accept","createIdxOptionsConstructor","startPolling","availablePollingRemeditaions","Number","isInteger","refresh","nextStep","hasSavedInteractionHandle","autoRemediate","enabledFeatures","IdxFeature","authenticatorData","getAuthenticatorData","getAuthenticatorFromRemediation","methodType","phoneNumber","val","AuthenticatorData","valueKey","getAuthenticator","formatAuthenticatorData","authenticatorsData","mapAuthenticatorDataFromValues","enrollmentId","Remediator","formatAuthenticators","existing","acc","getRequiredValues","hasData","getAllValues","getData","titleCase","entry","_authClient","_context","getName","getInputs","inputFromRemediation","visible","messages","alias","aliases","inputsFromRemediation","inputsFromRemediator","authenticatorFromRemediation","SelectAuthenticator","matchedOption","isCurrentAuthenticator","currentAuthenticator","isCurrentAuthenticatorEnrollment","currentAuthenticatorEnrollment","selectedAuthenticator","selectedOption","VerificationCodeAuthenticator","verificationCode","OktaVerifyTotp","totp","SecurityQuestionEnrollment","questionKey","answer","question","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","clientData","attestation","WebauthnVerification","signatureData","VerifyAuthenticator","challengeData","authenticatorEnrollments","canVerify","mapCredentials","common","getCredentialsFromRemediation","userProfileFromValues","userProfile","canRemediate","attributeValues","errorRemediation","errors","email","unwrapFormValue","formKeys","unwrappedForm","GenericRemediator","produces","rest","identifier","newPassword","idp","isRecoveryFlow","authenticatorMap","methodTypeOption","methodTypeValue","filterKey","skip","idxRemediation","cur","charAt","toUpperCase","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","actionName","remediate","remediator","getRemediator","actionFromValues","actionFromOptions","valuesWithoutExecutedAction","optionsWithoutExecutedAction","handleFailedResponse","canceled","terminal","isTerminalResponse","filterValuesForRemediation","getNextStep","getValuesAfterProceed","gr","initializeValues","initializeData","IdxStatus","getDataFromIntrospect","interactResponse","getDataFromRemediate","idxResponseFromRemediation","getTokens","ignoreSignature","urls","tokenResponse","finalizeData","shouldSaveResponse","shouldClearTransaction","clearSharedStorage","getEnabledFeatures","availableSteps","getAvailableSteps","getMessagesFromResponse","hasActions","hasErrors","class","saveIdxResponse","createIdxStorageManager","storageManagerOptions","transactionStorage","getTransactionStorage","SavedObject","tokenParams","pkceMeta","createOAuthMeta","savedMeta","validExistingMeta","save","muteWarning","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","ctx","_oktaAuth","newCtx","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","globalMessages","fieldMessages","seen","filtered","i18n","remediatorMap","remediatorClass","remediationName","T","getRemediatorClass","stepObj","startsWith","split2","part1","part2","actionObj","idxRemediations","remediatorCandidates","canSkip","canSkipFn","canResend","canResendFn","getEnrolledCredentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","user","displayName","challenge","pubKeyCredParams","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","userVerification","allowCredentials","getAttestation","credential","clientDataJSON","attestationObject","getAssertion","BaseTransaction","sendRequest","TransactionClass","accessTokenObj","atToken","requestUrl","httpOptions","dpop","getDPoPAuthorizationHeaders","Authorization","Dpop","generateRequestFnFromLinks","methodName","links","ProfileTransaction","createdAt","modifiedAt","ProfileSchemaTransaction","properties","getProfile","updateProfile","getProfileSchema","EmailStatusTransaction","EmailChallengeTransaction","verify","EmailTransaction","roles","getEmails","getEmail","addEmail","deleteEmail","sendEmailChallenge","getEmailChallenge","emailId","challengeId","verifyEmailChallenge","PhoneTransaction","getPhones","getPhone","addPhone","deletePhone","sendPhoneChallenge","verifyPhoneChallenge","PasswordTransaction","created","lastUpdated","PasswordStatus","enroll","update","getPassword","enrollPassword","updatePassword","deletePassword","createOktaAuthMyAccount","TransactionManager","mixinMyAccount","myaccount","MyAccountMethods","EmailRole","Status","SdkClock","localOffset","parseInt","DEFAULT_OPTIONS","clearPendingRemoveTokens","expireEarlySeconds","TokenManager","storageOptions","getTokenStorage","clock","expireTimeouts","renewPromise","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","getExpireTime","freshToken","EVENT_ERROR","expireTime","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","validateToken","emitSetStorageEvent","getSync","isAccessToken","isIDToken","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRemoved","existingTokens","newToken","existingToken","removedToken","shouldRenew","refreshKey","renewTokens","tokenKey","removedTokens","pendingRemove","MAX_ENTRY_LIFETIME","enableSharedStorage","sharedStorage","getSharedTansactionStorage","clearTransactionFromSharedStorage","isTransactionMeta","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","decodedToken","INDEXEDDB_NAME","DB_KEY","isDPoPNonceError","createJwt","claims","signingKey","head","algorithm","cryptoRandomValue","byteLen","v","generateKeyPair","modulusLength","publicExponent","hashAccessToken","invokeStoreMethod","req","store","storeKeyPair","pairId","keyPair","findKeyPair","clearDPoPKeyPair","clearAllDPoPKeyPairs","createDPoPKeyPair","keyPairId","clearDPoPKeyPairAfterRevoke","revokedToken","shouldClear","tokenType","dpopPairId","generateDPoPProof","kty","crv","x","y","alg","typ","jwk","htm","htu","iat","jti","ath","privateKey","generateDPoPForTokenRequest","convertTokenParamsToOAuthParams","oauthParams","idpScope","loginHint","prompt","sessionToken","enrollAmrValues","mayBeArray","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","getPostData","code","makeTokenRequest","dpopKeyPair","proof","DPoP","dpopNonce","postToTokenEndpoint","tokenUrl","postRefreshToken","grant_type","refresh_token","getWellKnown","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","getOAuthUrls","getDefaultTokenParams","getTokenOptions","handleResponseOptions","oauthResponse","handleOAuthResponse","enrollAuthenticator","prepareEnrollAuthenticatorParams","createEnrollAuthenticatorMeta","authorizeUrl","setLocation","createTokenAPI","queue","useQueue","getWithRedirectFn","getWithRedirect","parseFromUrlFn","parseFromUrl","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","getWithoutPrompt","getWithPopup","getWithIDPPopup","revoke","revokeToken","renewToken","renewTokensWithRefresh","getUserInfo","accessTokenObject","idTokenObject","oidcIntrospect","createEndpoints","authorize","createOktaAuthOAuth","getToken","popupWindow","idpPopup","iframePromise","addPostMessageListener","iframeEl","loadFrame","oauthPromise","closePoller","setInterval","clearInterval","idpPromise","addIDPPopupLisenter","userinfoUrl","userInfo","sub","loadPopup","generateState","cancelPromise","validateResponse","interaction_code","dpopOptions","allowBearerTokens","token_type","tokenDict","expiresIn","expires_in","access_token","id_token","accessJwt","idJwt","idTokenObj","exp","validationParams","hintMap","kind","TokenKind","iss","introspectUrl","introspection_endpoint","authHeader","token_type_hint","WithOriginalUri","browserStorage","getOriginalUriStorage","PKCE","generateVerifier","computeChallenge","handleLogin","_tokenQueue","endpoints","onExpiredToken","shouldRemove","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","postLogoutRedirectUri","logoutUrl","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","closeSession","sessionClosed","append","clearTokensBeforeRedirect","addPendingRemoveFlags","wwwAuth","wwwErr","RegExp","assertValidConfig","removeTrailingSlash","revokeUrl","toAbsoluteUrl","ignoreLifetime","maxClockSkew","getResponseMode","defaultResponseMode","paramStr","nativeLoc","cleanOAuthResponseFromUrl","nativeHistory","nativeDoc","replaceState","title","pathname","removeSearch","removeHash","throwInvalidTokenError","getSingleToken","originalToken","refreshTokenObject","renewTokenParams","endpointParams","isSameRefreshToken","updateRefreshToken","isRefreshTokenInvalidError","removeRefreshToken","creds","getOptionsForSection","logServerSideMemoryStorageWarning","BaseStorageManager","isToken","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","DEFAULT_TIMEOUT","eventTarget","attachEvent","detachEvent","popupTitle","responseHandler","timeoutId","isTrusted","getDefaultEnrollAuthenticatorParams","defaultRedirectUri","generateNonce","isAuthorizationCodeError","errorResponse","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","genRandomString","getIssuer","oauthMeta","dec2hex","dec","substr","prefix","verifier","ceil","prepareParams","assertPKCESupport","errorMessage","validateCodeChallengeMethod","preparePKCE","defaults","isRefreshTokenError","plus2space","paramSplit","fragment","validateClaims","aud","acr","configuredIssuer","validationOptions","sdkCrypto","at_hash","sessionExists","session","getSession","refreshSession","setCookieAndRedirect","redirectUrl","checkAccountSetupComplete","createSessionApi","sectionName","overrideOptions","storageTypes","storageName","storageString","StorageManager","STORAGE_MANAGER_OPTIONS","cache","cookieSettings","getCookieSettings","running","thisObject","queueItem","isPromise","getNativeConsole","nativeConsole","deprecate","deprecateWrap","isoToUTCString","isoTime","UTC","randomCharset","ms","delim","splice","additionalArgs","extend","obj1","prop","cleaned","newobj","props","collection","found","altName","toRelativeUrl","trimmed","CancelError","reason","executor","_cancelHandlers","_isPending","_isCanceled","_rejectOnCancel","_promise","_reject","defineProperties","boolean","onFulfilled","onRejected","onFinally","userFn","arguments_","__self__","F","DOMException","support","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","done","Headers","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","buf","view","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","chars","readArrayBufferAsText","oldValue","callback","thisArg","Request","upcased","mode","referrer","trim","bytes","Response","bodyInit","statusText","redirectStatuses","redirect","RangeError","stack","aborted","XMLHttpRequest","abortXhr","rawHeaders","getAllResponseHeaders","line","responseURL","ontimeout","onabort","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","E","once","evtArr","len","evts","liveEvents","ReferenceError","__esModule","isNativeReflectConstruct","toPropertyKey","_defineProperties","_getPrototypeOf","__proto__","_typeof","assertThisInitialized","_regeneratorRuntime","asyncIterator","u","toStringTag","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","f","GeneratorFunction","GeneratorFunctionPrototype","d","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","mark","awrap","async","reverse","prev","rval","handle","complete","delegateYield","_setPrototypeOf","toPrimitive","isNativeFunction","runtime","regeneratorRuntime","accidentalStrictMode","_arrayLikeToArray","_assertThisInitialized","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_classCallCheck","_createClass","_defineProperty","_get","getOwnPropertyDescriptor","_inherits","_objectWithoutProperties","getOwnPropertySymbols","propertyIsEnumerable","_possibleConstructorReturn","_slicedToArray","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","_unsupportedIterableToArray","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","WithIdx","WithMyAccount","OktaAuth"],"sourceRoot":""}