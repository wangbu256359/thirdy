{"version":3,"file":"fingerprint.js","names":["isMessageFromCorrectSource","iframe","event","source","contentWindow","fingerprint","sdk","options","isFingerprintSupported","Promise","reject","AuthSdkError","container","document","body","timeout","listener","promise","resolve","createElement","style","display","e","data","origin","getIssuerOrigin","msg","JSON","parse","err","type","postMessage","stringify","addListener","window","src","appendChild","setTimeout","finally","clearTimeout","removeListener","contains","parentElement","removeChild"],"sources":["../../../lib/browser/fingerprint.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../base/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nconst isMessageFromCorrectSource = (iframe: HTMLIFrameElement, event: MessageEvent)\n: boolean => event.source === iframe.contentWindow;\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  const container = options?.container ?? document.body;\n  let timeout: NodeJS.Timeout;\n  let iframe: HTMLIFrameElement;\n  let listener: (this: Window, ev: MessageEvent) => void;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e: MessageEvent) {\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        iframe?.contentWindow?.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      iframe.parentElement?.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n"],"mappings":";;;AAaA;AACA;AACA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMA,0BAA0B,GAAG,CAACC,MAAyB,EAAEC,KAAmB,KACrEA,KAAK,CAACC,MAAM,KAAKF,MAAM,CAACG,aAAa;AAEnC,SAASC,WAAW,CAACC,GAA0B,EAAEC,OAA4B,EAAmB;EAC7G,IAAI,CAAC,IAAAC,gCAAsB,GAAE,EAAE;IAC7B,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,oBAAY,CAAC,gDAAgD,CAAC,CAAC;EAC3F;EAEA,MAAMC,SAAS,GAAGL,OAAO,EAAEK,SAAS,IAAIC,QAAQ,CAACC,IAAI;EACrD,IAAIC,OAAuB;EAC3B,IAAId,MAAyB;EAC7B,IAAIe,QAAkD;EACtD,MAAMC,OAAO,GAAG,IAAIR,OAAO,CAAC,UAAUS,OAAO,EAAER,MAAM,EAAE;IACrDT,MAAM,GAAGY,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IACzClB,MAAM,CAACmB,KAAK,CAACC,OAAO,GAAG,MAAM;;IAE7B;IACAL,QAAQ,GAAG,SAASA,QAAQ,CAACM,CAAe,EAAE;MAC5C,IAAI,CAACtB,0BAA0B,CAACC,MAAM,EAAEqB,CAAC,CAAC,EAAE;QAC1C;MACF;MAEA,IAAI,CAACA,CAAC,IAAI,CAACA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACE,MAAM,KAAKlB,GAAG,CAACmB,eAAe,EAAE,EAAE;QACvD;MACF;MAEA,IAAIC,GAAG;MACP,IAAI;QACFA,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACN,CAAC,CAACC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ;QACA;QACA;QACA;MACF;MAEA,IAAI,CAACH,GAAG,EAAE;QAAE;MAAQ;MACpB,IAAIA,GAAG,CAACI,IAAI,KAAK,sBAAsB,EAAE;QACvC,OAAOZ,OAAO,CAACQ,GAAG,CAACrB,WAAW,CAAW;MAC3C,CAAC,MAAM,IAAIqB,GAAG,CAACI,IAAI,KAAK,yBAAyB,EAAE;QACjD7B,MAAM,EAAEG,aAAa,EAAE2B,WAAW,CAACJ,IAAI,CAACK,SAAS,CAAC;UAChDF,IAAI,EAAE;QACR,CAAC,CAAC,EAAER,CAAC,CAACE,MAAM,CAAC;MACf,CAAC,MAAM;QACL,OAAOd,MAAM,CAAC,IAAIC,oBAAY,CAAC,SAAS,CAAC,CAAC;MAC5C;IACF,CAAC;IACD,IAAAsB,iBAAW,EAACC,MAAM,EAAE,SAAS,EAAElB,QAAQ,CAAC;IAExCf,MAAM,CAACkC,GAAG,GAAG7B,GAAG,CAACmB,eAAe,EAAE,GAAG,kCAAkC;IACvEb,SAAS,CAACwB,WAAW,CAACnC,MAAM,CAAC;IAE7Bc,OAAO,GAAGsB,UAAU,CAAC,YAAW;MAC9B3B,MAAM,CAAC,IAAIC,oBAAY,CAAC,0BAA0B,CAAC,CAAC;IACtD,CAAC,EAAEJ,OAAO,EAAEQ,OAAO,IAAI,KAAK,CAAC;EAC/B,CAAC,CAAC;EAEF,OAAOE,OAAO,CAACqB,OAAO,CAAC,YAAW;IAChCC,YAAY,CAACxB,OAAO,CAAC;IACrB,IAAAyB,oBAAc,EAACN,MAAM,EAAE,SAAS,EAAElB,QAAQ,CAAC;IAC3C,IAAIJ,SAAS,CAAC6B,QAAQ,CAACxC,MAAM,CAAC,EAAE;MAC9BA,MAAM,CAACyC,aAAa,EAAEC,WAAW,CAAC1C,MAAM,CAAC;IAC3C;EACF,CAAC,CAAC;AACJ;AAAC"}