{"version":3,"file":"getWithPopup.js","names":["getWithPopup","sdk","options","arguments","length","Promise","reject","AuthSdkError","popupWindow","loadPopup","clone","Object","assign","display","responseMode","getToken","getWithIDPPopup","BroadcastChannel","redirectUri","state","generateState","channel","idpPopup","cancelPromise","promise","resolve","then","res","catch","err","cancel","close"],"sources":["../../../lib/oidc/getWithPopup.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup, generateState } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n\nexport function getWithIDPPopup(\n  sdk: OktaAuthOAuthInterface,\n  options: Omit<TokenParams, 'redirectUri'> & { redirectUri: string }\n): { cancel: () => void, promise: Promise<TokenResponse> } {\n try {\n   // eslint-disable-next-line compat/compat\n   if (!BroadcastChannel) {\n    throw new AuthSdkError('Modern browser with `BroadcastChannel` support is required to use this method');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('`redirectUri` is a required param for `getWithIDPPopup`');\n  }\n\n  if (!options.state) {\n    options.state = generateState();\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  // eslint-disable-next-line compat/compat\n  const channel = new BroadcastChannel(`popup-callback:${options.state}`);\n\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'query',\n    popupWindow,\n    idpPopup: true,\n    channel,\n  });\n\n  let cancelPromise;\n  const promise = new Promise<TokenResponse>((resolve, reject) => {\n    cancelPromise = reject;\n    return getToken(sdk, options)\n    .then((res) => resolve(res))\n    .catch(err => reject(err));\n  });\n\n  const cancel = () => {\n    channel.close();\n    cancelPromise(new AuthSdkError('Popup flow canceled'));\n  };\n\n  return {\n    promise,\n    cancel\n  };\n }\n catch (err) {\n  return {\n    promise: Promise.reject(err),\n    cancel: () => {}    // noop, no need to for method when error is thrown\n  };\n }\n}\n"],"mappings":";;;;AAYA;AAEA;AACA;AACA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOO,SAASA,YAAY,CAACC,GAA2B,EAAEC,OAAoB,EAA0B;EACtG,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,oBAAY,CAAC,sEAAsE,CAAC,CAAC;EACjH;;EAEA;EACA;EACA;EACA,MAAMC,WAAW,GAAG,IAAAC,gBAAS,EAAC,GAAG,EAAEP,OAAO,CAAC;EAC3CA,OAAO,GAAG,IAAAQ,WAAK,EAACR,OAAO,CAAC,IAAI,CAAC,CAAC;EAC9BS,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;IACrBW,OAAO,EAAE,OAAO;IAChBC,YAAY,EAAE,mBAAmB;IACjCN;EACF,CAAC,CAAC;EACF,OAAO,IAAAO,kBAAQ,EAACd,GAAG,EAAEC,OAAO,CAAC;AAC/B;AAEO,SAASc,eAAe,CAC7Bf,GAA2B,EAC3BC,OAAmE,EACV;EAC1D,IAAI;IACF;IACA,IAAI,CAACe,gBAAgB,EAAE;MACtB,MAAM,IAAIV,oBAAY,CAAC,+EAA+E,CAAC;IACzG;IAEA,IAAI,CAACL,OAAO,CAACgB,WAAW,EAAE;MACxB,MAAM,IAAIX,oBAAY,CAAC,yDAAyD,CAAC;IACnF;IAEA,IAAI,CAACL,OAAO,CAACiB,KAAK,EAAE;MAClBjB,OAAO,CAACiB,KAAK,GAAG,IAAAC,oBAAa,GAAE;IACjC;;IAEA;IACA;IACA;IACA,MAAMZ,WAAW,GAAG,IAAAC,gBAAS,EAAC,GAAG,EAAEP,OAAO,CAAC;IAC3C;IACA,MAAMmB,OAAO,GAAG,IAAIJ,gBAAgB,CAAE,kBAAiBf,OAAO,CAACiB,KAAM,EAAC,CAAC;IAEvEjB,OAAO,GAAG,IAAAQ,WAAK,EAACR,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9BS,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;MACrBW,OAAO,EAAE,OAAO;MAChBC,YAAY,EAAE,OAAO;MACrBN,WAAW;MACXc,QAAQ,EAAE,IAAI;MACdD;IACF,CAAC,CAAC;IAEF,IAAIE,aAAa;IACjB,MAAMC,OAAO,GAAG,IAAInB,OAAO,CAAgB,CAACoB,OAAO,EAAEnB,MAAM,KAAK;MAC9DiB,aAAa,GAAGjB,MAAM;MACtB,OAAO,IAAAS,kBAAQ,EAACd,GAAG,EAAEC,OAAO,CAAC,CAC5BwB,IAAI,CAAEC,GAAG,IAAKF,OAAO,CAACE,GAAG,CAAC,CAAC,CAC3BC,KAAK,CAACC,GAAG,IAAIvB,MAAM,CAACuB,GAAG,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAG,MAAM;MACnBT,OAAO,CAACU,KAAK,EAAE;MACfR,aAAa,CAAC,IAAIhB,oBAAY,CAAC,qBAAqB,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;MACLiB,OAAO;MACPM;IACF,CAAC;EACF,CAAC,CACD,OAAOD,GAAG,EAAE;IACX,OAAO;MACLL,OAAO,EAAEnB,OAAO,CAACC,MAAM,CAACuB,GAAG,CAAC;MAC5BC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAI;IACtB,CAAC;EACF;AACD"}