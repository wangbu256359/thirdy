{"version":3,"file":"dpop.js","names":["INDEXEDDB_NAME","DB_KEY","isDPoPNonceError","obj","isOAuthError","isWWWAuthError","errorCode","createJwt","header","claims","signingKey","head","stringToBase64Url","JSON","stringify","body","signature","webcrypto","subtle","sign","name","algorithm","stringToBuffer","base64ToBase64Url","bufferToBase64Url","cryptoRandomValue","byteLen","getRandomValues","Uint8Array","map","v","toString","join","generateKeyPair","hash","modulusLength","publicExponent","generateKey","hashAccessToken","accessToken","buffer","TextEncoder","encode","digest","btoa","String","fromCharCode","apply","replace","keyStore","Promise","resolve","reject","indexedDB","window","req","open","onerror","error","onupgradeneeded","db","result","createObjectStore","onsuccess","tx","transaction","store","objectStore","oncomplete","close","err","invokeStoreMethod","method","args","storeKeyPair","pairId","keyPair","findKeyPair","AuthSdkError","clearDPoPKeyPair","clearAllDPoPKeyPairs","createDPoPKeyPair","keyPairId","clearDPoPKeyPairAfterRevoke","revokedToken","tokens","shouldClear","refreshToken","tokenType","dpopPairId","generateDPoPProof","url","nonce","kty","crv","e","n","x","y","exportKey","publicKey","alg","typ","jwk","htm","htu","iat","Math","floor","Date","now","jti","ath","privateKey","generateDPoPForTokenRequest","params"],"sources":["../../../lib/oidc/dpop.ts"],"sourcesContent":["// References:\n// https://www.w3.org/TR/WebCryptoAPI/#concepts-key-storage\n// https://datatracker.ietf.org/doc/html/rfc9449\n\nimport {\n  webcrypto,\n  stringToBase64Url,\n  stringToBuffer,\n  bufferToBase64Url,\n  base64ToBase64Url,\n  btoa\n} from '../crypto';\nimport { AuthSdkError, OAuthError, WWWAuthError, isOAuthError, isWWWAuthError } from '../errors';\nimport { Tokens } from './types';\n\nexport interface DPoPClaims {\n  htm: string;\n  htu: string;\n  iat: number;\n  jti: string;\n  nonce?: string;\n  ath?: string;\n}\n\nexport interface DPoPProofParams {\n  keyPair: CryptoKeyPair;\n  url: string;\n  method: string;\n  nonce?: string;\n  accessToken?: string;\n}\n\nexport type ResourceDPoPProofParams = Omit<DPoPProofParams, 'keyPair' | 'nonce'>;\ntype DPoPProofTokenRequestParams = Omit<DPoPProofParams, 'accessToken'>;\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\n\nexport function isDPoPNonceError(obj: any): obj is OAuthError | WWWAuthError {\n  return (\n    (isOAuthError(obj) || isWWWAuthError(obj)) &&\n    obj.errorCode === 'use_dpop_nonce'\n  );\n}\n\n/////////// crypto ///////////\n\nexport async function createJwt(header: object, claims: object, signingKey: CryptoKey): Promise<string> {\n  const head = stringToBase64Url(JSON.stringify(header));\n  const body = stringToBase64Url(JSON.stringify(claims));\n  const signature = await webcrypto.subtle.sign(\n    { name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`)\n  );\n  return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\n\nexport function cryptoRandomValue (byteLen = 32) {\n  return [...webcrypto.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\n\nexport async function generateKeyPair (): Promise<CryptoKeyPair> {\n  const algorithm = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: 'SHA-256',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n  };\n\n  // The \"false\" here makes it non-exportable\n  // https://caniuse.com/mdn-api_subtlecrypto_generatekey\n  return webcrypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\n\nasync function hashAccessToken (accessToken: string): Promise<string> {\n  const buffer = new TextEncoder().encode(accessToken);\n  const hash = await webcrypto.subtle.digest('SHA-256', buffer);\n\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hash) as unknown as number[]))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/////////// indexeddb / keystore ///////////\n\n\n// https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore#instance_methods\n// add additional methods as needed\nexport type StoreMethod = 'get' | 'add' | 'delete' | 'clear';\n\n// convenience abstraction for exposing IDBObjectStore instance\nfunction keyStore (): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n\n      req.onerror = function () {\n        reject(req.error!);\n      };\n\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n\n        tx.onerror = function () {\n          reject(tx.error!);\n        };\n\n        const store = tx.objectStore(DB_KEY);\n\n        resolve(store);\n\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    }\n    catch (err) {\n      reject(err);\n    }\n  });\n}\n\n// convenience abstraction for wrapping IDBObjectStore methods in promises\nasync function invokeStoreMethod (method: StoreMethod, ...args: any[]): Promise<IDBRequest> {\n  const store = await keyStore();\n  return new Promise((resolve, reject) => {\n    // https://github.com/microsoft/TypeScript/issues/49700\n    // https://github.com/microsoft/TypeScript/issues/49802\n    // @ts-expect-error ts(2556)\n    const req = store[method](...args);\n    req.onsuccess = function () {\n      resolve(req);\n    };\n    req.onerror = function () {\n      reject(req.error);\n    };\n  });\n}\n\nasync function storeKeyPair (pairId: string, keyPair: CryptoKeyPair) {\n  await invokeStoreMethod('add', keyPair, pairId);\n  return keyPair;\n}\n\n// attempts to find keyPair stored at given key, otherwise throws\nexport async function findKeyPair (pairId?: string): Promise<CryptoKeyPair> {\n  if (pairId) {\n    const req = await invokeStoreMethod('get', pairId);\n    if (req.result) {\n      return req.result;\n    }\n  }\n\n  // defaults to throwing unless keyPair is found\n  throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\n\nexport async function clearDPoPKeyPair (pairId: string): Promise<void> {\n  await invokeStoreMethod('delete', pairId);\n}\n\nexport async function clearAllDPoPKeyPairs (): Promise<void> {\n  await invokeStoreMethod('clear');\n}\n\n// generates a crypto (non-extractable) private key pair and writes it to indexeddb, returns key (id)\nexport async function createDPoPKeyPair (): Promise<{keyPair: CryptoKeyPair, keyPairId: string}> {\n  const keyPairId = cryptoRandomValue(4);\n  const keyPair = await generateKeyPair();\n  await storeKeyPair(keyPairId, keyPair);\n  return { keyPair, keyPairId };\n}\n\n// will clear PK from storage if certain token conditions are met\n/* eslint max-len: [2, 132], complexity: [2, 12] */\nexport async function clearDPoPKeyPairAfterRevoke (revokedToken: 'access' | 'refresh', tokens: Tokens): Promise<void> {\n  let shouldClear = false;\n\n  const { accessToken, refreshToken } = tokens;\n\n  // revoking access token and refresh token doesn't exist\n  if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n    shouldClear = true;\n  }\n\n  // revoking refresh token and access token doesn't exist\n  if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n    shouldClear = true;\n  }\n\n  const pairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n  if (shouldClear && pairId) {\n    await clearDPoPKeyPair(pairId);\n  }\n}\n\n/////////// proof generation methods ///////////\n\nexport async function generateDPoPProof ({ keyPair, url, method, nonce, accessToken }: DPoPProofParams): Promise<string> {\n  const { kty, crv, e, n, x, y } = await webcrypto.subtle.exportKey('jwk', keyPair.publicKey);\n  const header = {\n    alg: 'RS256',\n    typ: 'dpop+jwt',\n    jwk: { kty, crv, e, n, x, y }\n  };\n\n  const claims: DPoPClaims = {\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: cryptoRandomValue(),\n  };\n\n  if (nonce) {\n    claims.nonce = nonce;\n  }\n\n  // encode access token\n  if (accessToken) {\n    claims.ath = await hashAccessToken(accessToken);\n  }\n\n  return createJwt(header, claims, keyPair.privateKey);\n}\n\n/* eslint max-len: [2, 132] */\nexport async function generateDPoPForTokenRequest ({ keyPair, url, method, nonce }: DPoPProofTokenRequestParams): Promise<string> {\n  const params: DPoPProofParams = { keyPair, url, method };\n  if (nonce) {\n    params.nonce = nonce;\n  }\n\n  return generateDPoPProof(params);\n}\n"],"mappings":"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"}