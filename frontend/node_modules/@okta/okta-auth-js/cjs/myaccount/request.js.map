{"version":3,"file":"request.js","names":["sendRequest","oktaAuth","options","TransactionClass","BaseTransaction","accessToken","accessTokenObj","tokenManager","getTokensSync","atToken","issuer","getIssuerOrigin","url","method","payload","requestUrl","startsWith","AuthSdkError","httpOptions","headers","args","dpop","Authorization","Dpop","getDPoPAuthorizationHeaders","res","httpRequest","ret","Array","isArray","map","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","href","hints","allow"],"sources":["../../../lib/myaccount/request.ts"],"sourcesContent":["import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { RequestOptions as HttpRequestOptions } from '../http/types';\nimport { AccessToken, OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n\n  const atToken = options.accessToken || accessTokenObj;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!atToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n\n  let accessToken: string | AccessToken = atToken;\n\n  const httpOptions: HttpRequestOptions = {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  };\n\n  if (oktaAuth.options.dpop) {\n    if (typeof accessToken === 'string') {\n      throw new AuthSdkError('AccessToken object must be provided when using dpop');\n    }\n\n    const { Authorization, Dpop } = await oktaAuth.getDPoPAuthorizationHeaders({\n      method,\n      url: requestUrl,\n      accessToken\n    });\n    httpOptions.headers!.Authorization = Authorization;\n    httpOptions.headers!.Dpop = Dpop;\n  }\n  else {\n    accessToken = typeof accessToken === 'string' ? accessToken : accessToken.accessToken;\n    httpOptions.accessToken = accessToken;\n  }\n\n  const res = await httpRequest(oktaAuth, httpOptions);\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string | AccessToken;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n"],"mappings":"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"}